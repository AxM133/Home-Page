{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\GitHub\\\\Home-Page\\\\src\\\\components\\\\widgets\\\\TodoWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TodoWidget.css';\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoWidget({\n  theme\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [titleInput, setTitleInput] = useState('');\n  const [descriptionInput, setDescriptionInput] = useState('');\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('advancedTodoTasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('advancedTodoTasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Удаление выполненных задач через 24 часа\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setTasks(prev => prev.filter(t => !t.completed || now - t.completedAt < 24 * 60 * 60 * 1000));\n    }, 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = e => {\n    e.stopPropagation();\n    setIsModalOpen(false);\n  };\n  const handleWidgetClick = () => openModal();\n  const handleAddTask = () => {\n    if (titleInput.trim() === '') return;\n    const newTask = {\n      id: Date.now(),\n      title: titleInput.trim(),\n      description: descriptionInput.trim(),\n      completed: false,\n      completedAt: null,\n      createdAt: Date.now()\n    };\n    setTasks(prev => [...prev, newTask]);\n    setTitleInput('');\n    setDescriptionInput('');\n  };\n  const toggleTask = id => {\n    setTasks(prev => prev.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed,\n      completedAt: task.completed ? null : Date.now()\n    } : task));\n  };\n  const removeTask = id => {\n    setTasks(prev => prev.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-widget widget\",\n      onClick: handleWidgetClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-small-title\",\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0423 \\u0432\\u0430\\u0441 \", tasks.length, \" \\u0437\\u0430\\u0434\\u0430\\u0447\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"task-input\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438...\",\n            value: titleInput,\n            onChange: e => setTitleInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"task-input\",\n            placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 (\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E)...\",\n            value: descriptionInput,\n            onChange: e => setDescriptionInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task-btn\",\n            onClick: handleAddTask,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `todo-item ${task.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-actions\",\n              children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                className: `todo-check ${task.completed ? 'checked' : ''}`,\n                onClick: () => toggleTask(task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FaTimesCircle, {\n                className: \"todo-delete\",\n                onClick: () => removeTask(task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoWidget, \"ZuwiQyu1DuFmcBecdJdsM4qwa+w=\");\n_c = TodoWidget;\nexport default TodoWidget;\nvar _c;\n$RefreshReg$(_c, \"TodoWidget\");","map":{"version":3,"names":["React","useState","useEffect","FaCheckCircle","FaTimesCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoWidget","theme","_s","tasks","setTasks","isModalOpen","setIsModalOpen","titleInput","setTitleInput","descriptionInput","setDescriptionInput","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","interval","setInterval","now","Date","prev","filter","t","completed","completedAt","clearInterval","openModal","closeModal","e","stopPropagation","handleWidgetClick","handleAddTask","trim","newTask","id","title","description","createdAt","toggleTask","map","task","removeTask","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/GitHub/Home-Page/src/components/widgets/TodoWidget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TodoWidget.css';\r\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\n\r\nfunction TodoWidget({ theme }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [titleInput, setTitleInput] = useState('');\r\n  const [descriptionInput, setDescriptionInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedTasks = localStorage.getItem('advancedTodoTasks');\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('advancedTodoTasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Удаление выполненных задач через 24 часа\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTasks((prev) =>\r\n        prev.filter((t) => !t.completed || now - t.completedAt < 24 * 60 * 60 * 1000)\r\n      );\r\n    }, 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = (e) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleWidgetClick = () => openModal();\r\n\r\n  const handleAddTask = () => {\r\n    if (titleInput.trim() === '') return;\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title: titleInput.trim(),\r\n      description: descriptionInput.trim(),\r\n      completed: false,\r\n      completedAt: null,\r\n      createdAt: Date.now(),\r\n    };\r\n    setTasks((prev) => [...prev, newTask]);\r\n    setTitleInput('');\r\n    setDescriptionInput('');\r\n  };\r\n\r\n  const toggleTask = (id) => {\r\n    setTasks((prev) =>\r\n      prev.map((task) =>\r\n        task.id === id\r\n          ? { ...task, completed: !task.completed, completedAt: task.completed ? null : Date.now() }\r\n          : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((prev) => prev.filter((task) => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Виджет TODO */}\r\n      <div className=\"todo-widget widget\" onClick={handleWidgetClick}>\r\n        <div className=\"todo-small-title\">TODO</div>\r\n        <div>У вас {tasks.length} задач</div>\r\n      </div>\r\n\r\n      {/* Модальное окно */}\r\n      {isModalOpen && (\r\n        <div className={`modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`} onClick={closeModal}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <h2 className=\"modal-title\">Список дел</h2>\r\n\r\n            {/* Поля ввода */}\r\n            <div className=\"todo-inputs\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"task-input\"\r\n                placeholder=\"Название задачи...\"\r\n                value={titleInput}\r\n                onChange={(e) => setTitleInput(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"task-input\"\r\n                placeholder=\"Описание (необязательно)...\"\r\n                value={descriptionInput}\r\n                onChange={(e) => setDescriptionInput(e.target.value)}\r\n              />\r\n              <button className=\"add-task-btn\" onClick={handleAddTask}>Добавить</button>\r\n            </div>\r\n\r\n            {/* Список задач */}\r\n            <ul className=\"todo-list\">\r\n              {tasks.map((task) => (\r\n                <li key={task.id} className={`todo-item ${task.completed ? 'completed' : ''}`}>\r\n                  <div className=\"todo-text\">\r\n                    <strong>{task.title}</strong>\r\n                    {task.description && <p>{task.description}</p>}\r\n                  </div>\r\n                  <div className=\"todo-actions\">\r\n                    <FaCheckCircle\r\n                      className={`todo-check ${task.completed ? 'checked' : ''}`}\r\n                      onClick={() => toggleTask(task.id)}\r\n                    />\r\n                    <FaTimesCircle className=\"todo-delete\" onClick={() => removeTask(task.id)} />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}