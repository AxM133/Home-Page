{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport SidebarMenu from './components/SidebarMenu';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\nimport TodoWidget from './components//widgets/TodoWidget';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [links, setLinks] = useState([]);\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [sortBy, setSortBy] = useState('manual');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [editIndex, setEditIndex] = useState(null);\n\n  // Новые состояния для фонового оформления\n  const [customBackgroundType, setCustomBackgroundType] = useState('default'); // 'default' | 'image' | 'video'\n  const [customBackgroundSrc, setCustomBackgroundSrc] = useState('');\n  const [useDynamicTimeTheme, setUseDynamicTimeTheme] = useState(false);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) setTheme(storedTheme);\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      setLinks([{\n        title: 'Google',\n        url: 'https://www.google.com',\n        customIcon: '',\n        category: '',\n        createdAt: Date.now()\n      }, {\n        title: 'YouTube',\n        url: 'https://www.youtube.com',\n        customIcon: '',\n        category: '',\n        createdAt: Date.now()\n      }]);\n    }\n\n    // Читаем фоновое оформление\n    const storedBgType = localStorage.getItem('bgType') || 'default';\n    const storedBgSrc = localStorage.getItem('bgSrc') || '';\n    const storedDynTime = localStorage.getItem('useDynamicTimeTheme') === 'true';\n    setCustomBackgroundType(storedBgType);\n    setCustomBackgroundSrc(storedBgSrc);\n    setUseDynamicTimeTheme(storedDynTime);\n  }, []);\n\n  // Сохранение theme\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Сохранение links\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Автоматическая смена темы по времени суток\n  useEffect(() => {\n    if (!useDynamicTimeTheme) return;\n    const now = new Date();\n    const hour = now.getHours();\n    if (hour >= 7 && hour < 19) {\n      // Утро/день\n      setTheme('light');\n    } else {\n      // Вечер/ночь\n      setTheme('dark');\n    }\n  }, [useDynamicTimeTheme]);\n  const toggleTheme = () => {\n    // Если включен динамический режим, ручное переключение отключаем\n    if (useDynamicTimeTheme) {\n      alert('Включен режим автосмены темы по времени суток');\n      return;\n    }\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const toggleRemoveMode = () => {\n    setIsRemoveMode(prev => !prev);\n  };\n  const handleAddLink = newLink => {\n    const isDuplicate = links.some(link => link.url === newLink.url);\n    if (isDuplicate) {\n      alert('Такая ссылка уже добавлена!');\n      return;\n    }\n    setLinks(prevLinks => [...prevLinks, newLink]);\n  };\n  const handleRemoveLink = index => {\n    setLinks(prevLinks => prevLinks.filter((_, i) => i !== index));\n  };\n  const handleMenuToggle = () => {\n    setIsMenuOpen(prev => !prev);\n  };\n  const handleEditLink = index => {\n    setEditIndex(index);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n      fileInputRef.current.click();\n    }\n  };\n  const handleSelectFile = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const base64Data = evt.target.result;\n      setLinks(prevLinks => {\n        const updated = [...prevLinks];\n        updated[editIndex] = {\n          ...updated[editIndex],\n          customIcon: base64Data\n        };\n        return updated;\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n  const filteredLinks = selectedCategory === 'All' ? links : links.filter(link => link.category === selectedCategory);\n  const sortedLinks = [...filteredLinks];\n  if (sortBy === 'alphabetical') {\n    sortedLinks.sort((a, b) => a.title.localeCompare(b.title, 'ru', {\n      sensitivity: 'base'\n    }));\n  } else if (sortBy === 'date') {\n    sortedLinks.sort((a, b) => b.createdAt - a.createdAt);\n  }\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    if (sortBy !== 'manual') return;\n    if (selectedCategory !== 'All') return;\n    const fromIndex = result.source.index;\n    const toIndex = result.destination.index;\n    const movingItem = sortedLinks[fromIndex];\n    const newLinks = Array.from(links);\n    const globalIndex = links.findIndex(l => l === movingItem);\n    newLinks.splice(globalIndex, 1);\n    const targetItem = sortedLinks[toIndex];\n    const globalIndexTarget = links.findIndex(l => l === targetItem);\n    newLinks.splice(globalIndexTarget, 0, movingItem);\n    setLinks(newLinks);\n  };\n\n  // ======  ФУНКЦИОНАЛ ДЛЯ СМЕНЫ ФОНА ======\n  const handleBackgroundTypeChange = type => {\n    setCustomBackgroundType(type);\n    localStorage.setItem('bgType', type);\n  };\n  const handleBackgroundSrcChange = src => {\n    setCustomBackgroundSrc(src);\n    localStorage.setItem('bgSrc', src);\n  };\n  const handleDynamicTimeTheme = checked => {\n    setUseDynamicTimeTheme(checked);\n    localStorage.setItem('useDynamicTimeTheme', checked);\n  };\n\n  // Пример нескольких готовых фонов\n  const predefinedBackgrounds = [{\n    label: 'Горы (image)',\n    type: 'image',\n    src: 'https://picsum.photos/id/1018/1920/1080'\n  }, {\n    label: 'Пляж (image)',\n    type: 'image',\n    src: 'https://picsum.photos/id/237/1920/1080'\n  }, {\n    label: 'Природа (video)',\n    type: 'video',\n    src: 'https://www.w3schools.com/html/mov_bbb.mp4'\n  }];\n\n  // Рендер ссылки\n  const renderLinks = () => {\n    return sortedLinks.map((link, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: `link-${index}`,\n      index: index,\n      isDragDisabled: sortBy !== 'manual' || selectedCategory !== 'All',\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        children: /*#__PURE__*/_jsxDEV(LinkBlock, {\n          title: link.title,\n          url: link.url,\n          customIcon: link.customIcon,\n          isRemoveMode: isRemoveMode,\n          onRemove: () => handleRemoveLink(index),\n          onEdit: () => handleEditLink(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Рендер фона в зависимости от типа\n  let backgroundElement = null;\n  if (customBackgroundType === 'image' && customBackgroundSrc) {\n    // Отображаем как фон-картинку\n    backgroundElement = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-bg-image\",\n      style: {\n        backgroundImage: `url(${customBackgroundSrc})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  } else if (customBackgroundType === 'video' && customBackgroundSrc) {\n    // Отображаем как видео\n    backgroundElement = /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"custom-bg-video\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: customBackgroundSrc,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n  // Если 'default', ничего не добавляем.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${theme}`,\n    children: [backgroundElement, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menu-button\",\n      onClick: handleMenuToggle,\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarMenu, {\n      isOpen: isMenuOpen,\n      onClose: handleMenuToggle,\n      onAddLink: handleAddLink,\n      toggleTheme: toggleTheme,\n      toggleRemoveMode: toggleRemoveMode,\n      sortBy: sortBy,\n      setSortBy: setSortBy,\n      selectedCategory: selectedCategory,\n      setSelectedCategory: setSelectedCategory,\n      allCategories: predefinedBackgrounds // Заготовки, если хочешь\n      // Дополнительные пропсы для фона\n      ,\n      customBackgroundType: customBackgroundType,\n      handleBackgroundTypeChange: handleBackgroundTypeChange,\n      customBackgroundSrc: customBackgroundSrc,\n      handleBackgroundSrcChange: handleBackgroundSrcChange,\n      useDynamicTimeTheme: useDynamicTimeTheme,\n      handleDynamicTimeTheme: handleDynamicTimeTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: handleSelectFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"links-droppable\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"links-section\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [renderLinks(), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"widgets-section\",\n        children: [/*#__PURE__*/_jsxDEV(WeatherWidget, {\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClockWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoWidget, {\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PiY3+kf9MibKtkf10QisYPV4CiE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","LinkBlock","SidebarMenu","WeatherWidget","ClockWidget","TodoWidget","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","App","_s","theme","setTheme","links","setLinks","isRemoveMode","setIsRemoveMode","isMenuOpen","setIsMenuOpen","sortBy","setSortBy","selectedCategory","setSelectedCategory","editIndex","setEditIndex","customBackgroundType","setCustomBackgroundType","customBackgroundSrc","setCustomBackgroundSrc","useDynamicTimeTheme","setUseDynamicTimeTheme","fileInputRef","storedTheme","localStorage","getItem","storedLinks","JSON","parse","title","url","customIcon","category","createdAt","Date","now","storedBgType","storedBgSrc","storedDynTime","setItem","stringify","hour","getHours","toggleTheme","alert","prev","toggleRemoveMode","handleAddLink","newLink","isDuplicate","some","link","prevLinks","handleRemoveLink","index","filter","_","i","handleMenuToggle","handleEditLink","current","value","click","handleSelectFile","e","file","target","files","reader","FileReader","onload","evt","base64Data","result","updated","readAsDataURL","filteredLinks","sortedLinks","sort","a","b","localeCompare","sensitivity","onDragEnd","destination","fromIndex","source","toIndex","movingItem","newLinks","Array","from","globalIndex","findIndex","l","splice","targetItem","globalIndexTarget","handleBackgroundTypeChange","type","handleBackgroundSrcChange","src","handleDynamicTimeTheme","checked","predefinedBackgrounds","label","renderLinks","map","draggableId","isDragDisabled","children","provided","ref","innerRef","draggableProps","dragHandleProps","onRemove","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","backgroundElement","className","style","backgroundImage","autoPlay","loop","muted","onClick","isOpen","onClose","onAddLink","allCategories","display","accept","onChange","droppableId","direction","droppableProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport SidebarMenu from './components/SidebarMenu';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\nimport TodoWidget from './components//widgets/TodoWidget';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [links, setLinks] = useState([]);\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [sortBy, setSortBy] = useState('manual');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [editIndex, setEditIndex] = useState(null);\n\n  // Новые состояния для фонового оформления\n  const [customBackgroundType, setCustomBackgroundType] = useState('default'); // 'default' | 'image' | 'video'\n  const [customBackgroundSrc, setCustomBackgroundSrc] = useState('');\n  const [useDynamicTimeTheme, setUseDynamicTimeTheme] = useState(false);\n\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) setTheme(storedTheme);\n\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      setLinks([\n        { title: 'Google', url: 'https://www.google.com', customIcon: '', category: '', createdAt: Date.now() },\n        { title: 'YouTube', url: 'https://www.youtube.com', customIcon: '', category: '', createdAt: Date.now() }\n      ]);\n    }\n\n    // Читаем фоновое оформление\n    const storedBgType = localStorage.getItem('bgType') || 'default';\n    const storedBgSrc = localStorage.getItem('bgSrc') || '';\n    const storedDynTime = localStorage.getItem('useDynamicTimeTheme') === 'true';\n\n    setCustomBackgroundType(storedBgType);\n    setCustomBackgroundSrc(storedBgSrc);\n    setUseDynamicTimeTheme(storedDynTime);\n  }, []);\n\n  // Сохранение theme\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Сохранение links\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Автоматическая смена темы по времени суток\n  useEffect(() => {\n    if (!useDynamicTimeTheme) return;\n    const now = new Date();\n    const hour = now.getHours();\n    if (hour >= 7 && hour < 19) {\n      // Утро/день\n      setTheme('light');\n    } else {\n      // Вечер/ночь\n      setTheme('dark');\n    }\n  }, [useDynamicTimeTheme]);\n\n  const toggleTheme = () => {\n    // Если включен динамический режим, ручное переключение отключаем\n    if (useDynamicTimeTheme) {\n      alert('Включен режим автосмены темы по времени суток');\n      return;\n    }\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  const toggleRemoveMode = () => {\n    setIsRemoveMode((prev) => !prev);\n  };\n\n  const handleAddLink = (newLink) => {\n    const isDuplicate = links.some((link) => link.url === newLink.url);\n    if (isDuplicate) {\n      alert('Такая ссылка уже добавлена!');\n      return;\n    }\n    setLinks((prevLinks) => [...prevLinks, newLink]);\n  };\n\n  const handleRemoveLink = (index) => {\n    setLinks((prevLinks) => prevLinks.filter((_, i) => i !== index));\n  };\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen((prev) => !prev);\n  };\n\n  const handleEditLink = (index) => {\n    setEditIndex(index);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleSelectFile = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const base64Data = evt.target.result;\n      setLinks((prevLinks) => {\n        const updated = [...prevLinks];\n        updated[editIndex] = {\n          ...updated[editIndex],\n          customIcon: base64Data\n        };\n        return updated;\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const filteredLinks =\n    selectedCategory === 'All'\n      ? links\n      : links.filter((link) => link.category === selectedCategory);\n\n  const sortedLinks = [...filteredLinks];\n  if (sortBy === 'alphabetical') {\n    sortedLinks.sort((a, b) => a.title.localeCompare(b.title, 'ru', { sensitivity: 'base' }));\n  } else if (sortBy === 'date') {\n    sortedLinks.sort((a, b) => b.createdAt - a.createdAt);\n  }\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    if (sortBy !== 'manual') return;\n    if (selectedCategory !== 'All') return;\n    const fromIndex = result.source.index;\n    const toIndex = result.destination.index;\n    const movingItem = sortedLinks[fromIndex];\n    const newLinks = Array.from(links);\n    const globalIndex = links.findIndex((l) => l === movingItem);\n    newLinks.splice(globalIndex, 1);\n    const targetItem = sortedLinks[toIndex];\n    const globalIndexTarget = links.findIndex((l) => l === targetItem);\n    newLinks.splice(globalIndexTarget, 0, movingItem);\n    setLinks(newLinks);\n  };\n\n  // ======  ФУНКЦИОНАЛ ДЛЯ СМЕНЫ ФОНА ======\n  const handleBackgroundTypeChange = (type) => {\n    setCustomBackgroundType(type);\n    localStorage.setItem('bgType', type);\n  };\n\n  const handleBackgroundSrcChange = (src) => {\n    setCustomBackgroundSrc(src);\n    localStorage.setItem('bgSrc', src);\n  };\n\n  const handleDynamicTimeTheme = (checked) => {\n    setUseDynamicTimeTheme(checked);\n    localStorage.setItem('useDynamicTimeTheme', checked);\n  };\n\n  // Пример нескольких готовых фонов\n  const predefinedBackgrounds = [\n    {\n      label: 'Горы (image)',\n      type: 'image',\n      src: 'https://picsum.photos/id/1018/1920/1080'\n    },\n    {\n      label: 'Пляж (image)',\n      type: 'image',\n      src: 'https://picsum.photos/id/237/1920/1080'\n    },\n    {\n      label: 'Природа (video)',\n      type: 'video',\n      src: 'https://www.w3schools.com/html/mov_bbb.mp4'\n    }\n  ];\n\n  // Рендер ссылки\n  const renderLinks = () => {\n    return sortedLinks.map((link, index) => (\n      <Draggable\n        key={index}\n        draggableId={`link-${index}`}\n        index={index}\n        isDragDisabled={sortBy !== 'manual' || selectedCategory !== 'All'}\n      >\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <LinkBlock\n              key={index}\n              title={link.title}\n              url={link.url}\n              customIcon={link.customIcon}\n              isRemoveMode={isRemoveMode}\n              onRemove={() => handleRemoveLink(index)}\n              onEdit={() => handleEditLink(index)}\n            />\n          </div>\n        )}\n      </Draggable>\n    ));\n  };\n\n  // Рендер фона в зависимости от типа\n  let backgroundElement = null;\n  if (customBackgroundType === 'image' && customBackgroundSrc) {\n    // Отображаем как фон-картинку\n    backgroundElement = (\n      <div\n        className=\"custom-bg-image\"\n        style={{ backgroundImage: `url(${customBackgroundSrc})` }}\n      />\n    );\n  } else if (customBackgroundType === 'video' && customBackgroundSrc) {\n    // Отображаем как видео\n    backgroundElement = (\n      <video className=\"custom-bg-video\" autoPlay loop muted>\n        <source src={customBackgroundSrc} type=\"video/mp4\" />\n      </video>\n    );\n  }\n  // Если 'default', ничего не добавляем.\n\n  return (\n    <div className={`App ${theme}`}>\n      {/* Рендерим \"подложку\" для фона (image/video) */}\n      {backgroundElement}\n\n      <button className=\"menu-button\" onClick={handleMenuToggle}>\n        ☰\n      </button>\n\n      <SidebarMenu\n        isOpen={isMenuOpen}\n        onClose={handleMenuToggle}\n        onAddLink={handleAddLink}\n        toggleTheme={toggleTheme}\n        toggleRemoveMode={toggleRemoveMode}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        selectedCategory={selectedCategory}\n        setSelectedCategory={setSelectedCategory}\n        allCategories={predefinedBackgrounds} // Заготовки, если хочешь\n        // Дополнительные пропсы для фона\n        customBackgroundType={customBackgroundType}\n        handleBackgroundTypeChange={handleBackgroundTypeChange}\n        customBackgroundSrc={customBackgroundSrc}\n        handleBackgroundSrcChange={handleBackgroundSrcChange}\n        useDynamicTimeTheme={useDynamicTimeTheme}\n        handleDynamicTimeTheme={handleDynamicTimeTheme}\n      />\n\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        onChange={handleSelectFile}\n      />\n\n      <main>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"links-droppable\" direction=\"horizontal\">\n            {(provided) => (\n              <section\n                className=\"links-section\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {renderLinks()}\n                {provided.placeholder}\n              </section>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <section className=\"widgets-section\">\n          <WeatherWidget theme={theme} />\n          <ClockWidget />\n          <TodoWidget theme={theme} />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}