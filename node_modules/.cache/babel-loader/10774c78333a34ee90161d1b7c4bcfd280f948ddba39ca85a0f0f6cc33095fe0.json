{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\components\\\\widgets\\\\CalendarWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CalendarWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarWidget() {\n  _s();\n  const [today] = useState(new Date());\n  const [reminders, setReminders] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  useEffect(() => {\n    const storedReminders = localStorage.getItem('calendarReminders');\n    if (storedReminders) {\n      setReminders(JSON.parse(storedReminders));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('calendarReminders', JSON.stringify(reminders));\n  }, [reminders]);\n  const addReminder = () => {\n    if (!selectedDate || inputValue.trim() === '') return;\n    const newReminder = {\n      id: Date.now(),\n      date: selectedDate,\n      text: inputValue.trim()\n    };\n    setReminders(prev => [...prev, newReminder]);\n    setInputValue('');\n    setSelectedDate('');\n  };\n  const removeReminder = id => {\n    setReminders(prev => prev.filter(r => r.id !== id));\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    return d.toLocaleDateString('ru-RU');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-widget widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041A\\u0430\\u043B\\u0435\\u043D\\u0434\\u0430\\u0440\\u044C / \\u041D\\u0430\\u043F\\u043E\\u043C\\u0438\\u043D\\u0430\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-today\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F: \", today.toLocaleDateString('ru-RU')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043D\\u0430\\u043F\\u043E\\u043C\\u0438\\u043D\\u0430\\u043D\\u0438\\u044F...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReminder,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reminder-list\",\n      children: reminders.map(rem => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reminder-date\",\n          children: [formatDate(rem.date), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reminder-text\",\n          children: rem.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-reminder\",\n          onClick: () => removeReminder(rem.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, rem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarWidget, \"5uwozBEUFjWYX+KLH36A4DuTCdw=\");\n_c = CalendarWidget;\nexport default CalendarWidget;\nvar _c;\n$RefreshReg$(_c, \"CalendarWidget\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CalendarWidget","_s","today","Date","reminders","setReminders","inputValue","setInputValue","selectedDate","setSelectedDate","storedReminders","localStorage","getItem","JSON","parse","setItem","stringify","addReminder","trim","newReminder","id","now","date","text","prev","removeReminder","filter","r","formatDate","d","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","rem","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/widgets/CalendarWidget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CalendarWidget.css';\r\n\r\nfunction CalendarWidget() {\r\n  const [today] = useState(new Date());\r\n  const [reminders, setReminders] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedReminders = localStorage.getItem('calendarReminders');\r\n    if (storedReminders) {\r\n      setReminders(JSON.parse(storedReminders));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('calendarReminders', JSON.stringify(reminders));\r\n  }, [reminders]);\r\n\r\n  const addReminder = () => {\r\n    if (!selectedDate || inputValue.trim() === '') return;\r\n    const newReminder = {\r\n      id: Date.now(),\r\n      date: selectedDate,\r\n      text: inputValue.trim()\r\n    };\r\n    setReminders((prev) => [...prev, newReminder]);\r\n    setInputValue('');\r\n    setSelectedDate('');\r\n  };\r\n\r\n  const removeReminder = (id) => {\r\n    setReminders((prev) => prev.filter((r) => r.id !== id));\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    return d.toLocaleDateString('ru-RU');\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-widget widget\">\r\n      <h3>Календарь / Напоминания</h3>\r\n      <div className=\"calendar-today\">\r\n        <p>Сегодня: {today.toLocaleDateString('ru-RU')}</p>\r\n      </div>\r\n      <div className=\"reminder-input\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Текст напоминания...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n        <button onClick={addReminder}>Добавить</button>\r\n      </div>\r\n      <ul className=\"reminder-list\">\r\n        {reminders.map((rem) => (\r\n          <li key={rem.id}>\r\n            <span className=\"reminder-date\">{formatDate(rem.date)}:</span>\r\n            <span className=\"reminder-text\">{rem.text}</span>\r\n            <button className=\"remove-reminder\" onClick={() => removeReminder(rem.id)}>\r\n              ×\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarWidget;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,CAAC,GAAGN,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAAC;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACjE,IAAIF,eAAe,EAAE;MACnBL,YAAY,CAACQ,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACI,OAAO,CAAC,mBAAmB,EAAEF,IAAI,CAACG,SAAS,CAACZ,SAAS,CAAC,CAAC;EACtE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACT,YAAY,IAAIF,UAAU,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/C,MAAMC,WAAW,GAAG;MAClBC,EAAE,EAAEjB,IAAI,CAACkB,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEd,YAAY;MAClBe,IAAI,EAAEjB,UAAU,CAACY,IAAI,CAAC;IACxB,CAAC;IACDb,YAAY,CAAEmB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEL,WAAW,CAAC,CAAC;IAC9CZ,aAAa,CAAC,EAAE,CAAC;IACjBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMgB,cAAc,GAAIL,EAAE,IAAK;IAC7Bf,YAAY,CAAEmB,IAAI,IAAKA,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzD,CAAC;EAED,MAAMQ,UAAU,GAAIN,IAAI,IAAK;IAC3B,MAAMO,CAAC,GAAG,IAAI1B,IAAI,CAACmB,IAAI,CAAC;IACxB,OAAOO,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;EACtC,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCjC,OAAA;MAAAiC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCrC,OAAA;MAAKgC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BjC,OAAA;QAAAiC,QAAA,GAAG,8CAAS,EAAC9B,KAAK,CAAC4B,kBAAkB,CAAC,OAAO,CAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNrC,OAAA;MAAKgC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,YAAa;QACpB+B,QAAQ,EAAGC,CAAC,IAAK/B,eAAe,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFrC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXK,WAAW,EAAC,sGAAsB;QAClCJ,KAAK,EAAEhC,UAAW;QAClBiC,QAAQ,EAAGC,CAAC,IAAKjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFrC,OAAA;QAAQ4C,OAAO,EAAE1B,WAAY;QAAAe,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNrC,OAAA;MAAIgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1B5B,SAAS,CAACwC,GAAG,CAAEC,GAAG,iBACjB9C,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAMgC,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAEJ,UAAU,CAACiB,GAAG,CAACvB,IAAI,CAAC,EAAC,GAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9DrC,OAAA;UAAMgC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEa,GAAG,CAACtB;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjDrC,OAAA;UAAQgC,SAAS,EAAC,iBAAiB;UAACY,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAACoB,GAAG,CAACzB,EAAE,CAAE;UAAAY,QAAA,EAAC;QAE3E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALFS,GAAG,CAACzB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnC,EAAA,CAvEQD,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AAyEvB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}