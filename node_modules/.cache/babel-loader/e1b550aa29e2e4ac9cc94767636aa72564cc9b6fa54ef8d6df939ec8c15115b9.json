{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\components\\\\LinkForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LinkForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinkForm({\n  onAddLink\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [iconBase64, setIconBase64] = useState('');\n\n  // Проверка корректности URL (формат)\n  const isValidUrl = value => {\n    try {\n      new URL(value);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Функция для выполнения fetch с тайм-аутом (проверяем, «жив» ли сайт)\n  const fetchWithTimeout = (url, options, timeout = 3000) => {\n    return Promise.race([fetch(url, options), new Promise((_, reject) => setTimeout(() => reject(new Error('timeout')), timeout))]);\n  };\n\n  // Обработчик выбора файла (чтение в base64)\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) {\n      setIconBase64('');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const base64Data = evt.target.result;\n      setIconBase64(base64Data);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Проверка, что поля title и url не пустые\n    if (title.trim() === '' || url.trim() === '') return;\n\n    // Проверка формата URL\n    if (!isValidUrl(url)) {\n      alert('Пожалуйста, введите корректный URL, например, https://example.com');\n      return;\n    }\n\n    // Проверка доступности сайта\n    try {\n      // Если fetch не выбросил исключений/таймаутов — считаем сайт доступным\n      await fetchWithTimeout(url, {\n        method: 'HEAD',\n        mode: 'no-cors'\n      }, 3000);\n\n      // Раз без ошибок — добавляем блок\n      onAddLink({\n        title,\n        url,\n        // Если пользователь загрузил файл, передаём base64,\n        // иначе пустую строку (чтобы потом блок знал, что нет пользовательской иконки).\n        customIcon: iconBase64 || ''\n      });\n\n      // Очищаем поля формы\n      setTitle('');\n      setUrl('');\n      setIconBase64('');\n      // Сбрасываем значение file input (по желанию)\n      e.target.reset();\n    } catch (error) {\n      alert('Сайт не найден или недоступен');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"link-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0441\\u044B\\u043B\\u043A\\u0438\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      placeholder: \"URL \\u0441\\u0430\\u0439\\u0442\\u0430 (\\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440, https://example.com)\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkForm, \"dSj24dbkn5roQQNaWt4qxufMVp8=\");\n_c = LinkForm;\nexport default LinkForm;\nvar _c;\n$RefreshReg$(_c, \"LinkForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LinkForm","onAddLink","_s","title","setTitle","url","setUrl","iconBase64","setIconBase64","isValidUrl","value","URL","error","fetchWithTimeout","options","timeout","Promise","race","fetch","_","reject","setTimeout","Error","handleFileChange","e","file","target","files","reader","FileReader","onload","evt","base64Data","result","readAsDataURL","handleSubmit","preventDefault","trim","alert","method","mode","customIcon","reset","onSubmit","className","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/LinkForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LinkForm.css';\r\n\r\nfunction LinkForm({ onAddLink }) {\r\n  const [title, setTitle] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [iconBase64, setIconBase64] = useState('');\r\n\r\n  // Проверка корректности URL (формат)\r\n  const isValidUrl = (value) => {\r\n    try {\r\n      new URL(value);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Функция для выполнения fetch с тайм-аутом (проверяем, «жив» ли сайт)\r\n  const fetchWithTimeout = (url, options, timeout = 3000) => {\r\n    return Promise.race([\r\n      fetch(url, options),\r\n      new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('timeout')), timeout)\r\n      )\r\n    ]);\r\n  };\r\n\r\n  // Обработчик выбора файла (чтение в base64)\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      setIconBase64('');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      const base64Data = evt.target.result;\r\n      setIconBase64(base64Data);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Проверка, что поля title и url не пустые\r\n    if (title.trim() === '' || url.trim() === '') return;\r\n\r\n    // Проверка формата URL\r\n    if (!isValidUrl(url)) {\r\n      alert('Пожалуйста, введите корректный URL, например, https://example.com');\r\n      return;\r\n    }\r\n\r\n    // Проверка доступности сайта\r\n    try {\r\n      // Если fetch не выбросил исключений/таймаутов — считаем сайт доступным\r\n      await fetchWithTimeout(url, {\r\n        method: 'HEAD',\r\n        mode: 'no-cors'\r\n      }, 3000);\r\n\r\n      // Раз без ошибок — добавляем блок\r\n      onAddLink({\r\n        title,\r\n        url,\r\n        // Если пользователь загрузил файл, передаём base64,\r\n        // иначе пустую строку (чтобы потом блок знал, что нет пользовательской иконки).\r\n        customIcon: iconBase64 || ''\r\n      });\r\n\r\n      // Очищаем поля формы\r\n      setTitle('');\r\n      setUrl('');\r\n      setIconBase64('');\r\n      // Сбрасываем значение file input (по желанию)\r\n      e.target.reset();\r\n    } catch (error) {\r\n      alert('Сайт не найден или недоступен');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"link-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Название ссылки\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"url\"\r\n        placeholder=\"URL сайта (например, https://example.com)\"\r\n        value={url}\r\n        onChange={(e) => setUrl(e.target.value)}\r\n        required\r\n      />\r\n\r\n      {/* Поле для загрузки иконки с локального диска (не обязательно) */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n\r\n      <button type=\"submit\">Добавить ссылку</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LinkForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}