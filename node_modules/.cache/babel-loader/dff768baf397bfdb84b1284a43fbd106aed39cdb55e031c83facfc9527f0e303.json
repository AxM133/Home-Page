{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\GitHub\\\\Home-Page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport SidebarMenu from './components/SidebarMenu';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\nimport TodoWidget from './components/widgets/TodoWidget';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction groupBy(array, keyFn) {\n  const result = {};\n  array.forEach(item => {\n    const key = keyFn(item);\n    if (!result[key]) {\n      result[key] = [];\n    }\n    result[key].push(item);\n  });\n  return result;\n}\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [links, setLinks] = useState([]);\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  // Сортировка / Категория (как прежде)\n  const [sortBy, setSortBy] = useState('manual');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [editIndex, setEditIndex] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Папка, открытая сейчас\n  const [folderOpenCat, setFolderOpenCat] = useState(null);\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) setTheme(storedTheme);\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      setLinks([{\n        title: 'Google',\n        url: 'https://www.google.com',\n        customIcon: '',\n        category: 'favorite',\n        createdAt: Date.now()\n      }, {\n        title: 'YouTube',\n        url: 'https://www.youtube.com',\n        customIcon: '',\n        category: 'video',\n        createdAt: Date.now()\n      }]);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n  useEffect(() => {\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n  }, [theme]);\n\n  // ==== FUNCTIONS ====\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const toggleRemoveMode = () => {\n    setIsRemoveMode(prev => !prev);\n  };\n  const handleAddLink = newLink => {\n    const isDuplicate = links.some(l => l.url === newLink.url);\n    if (isDuplicate) {\n      alert('Такая ссылка уже добавлена!');\n      return;\n    }\n    setLinks(prev => [...prev, newLink]);\n  };\n  const handleRemoveLink = index => {\n    setLinks(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleMenuToggle = () => {\n    setIsMenuOpen(prev => !prev);\n  };\n  const handleEditLink = index => {\n    setEditIndex(index);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n      fileInputRef.current.click();\n    }\n  };\n  const handleSelectFile = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const base64Data = evt.target.result;\n      setLinks(prev => {\n        const updated = [...prev];\n        updated[editIndex] = {\n          ...updated[editIndex],\n          customIcon: base64Data\n        };\n        return updated;\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // ==== FILTERING / SORTING\n  let filteredLinks;\n  if (selectedCategory === 'All') {\n    filteredLinks = links;\n  } else {\n    // Если выбрана какая-то категория, + показываем favorite\n    filteredLinks = links.filter(l => l.category === 'favorite' || l.category === selectedCategory);\n  }\n  const sortedLinks = [...filteredLinks];\n  if (sortBy === 'alphabetical') {\n    sortedLinks.sort((a, b) => a.title.localeCompare(b.title, 'ru', {\n      sensitivity: 'base'\n    }));\n  } else if (sortBy === 'date') {\n    sortedLinks.sort((a, b) => b.createdAt - a.createdAt);\n  }\n  // manual => drag & drop\n\n  // Drag & Drop\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    // source { droppableId, index }, destination { droppableId, index }\n    const {\n      source,\n      destination\n    } = result;\n\n    // Если сортировка не manual, игнорируем\n    if (sortBy !== 'manual') return;\n\n    // Если user перетаскивает в ту же категорию / droppable\n    if (source.droppableId === destination.droppableId) {\n      // reorder внутри той же droppable\n      reorderInSameDroppable(source.droppableId, source.index, destination.index);\n    } else {\n      // Если не хотим меж-дроппл перенос, можно игнорировать\n      // ИЛИ поддержать перенос? По задаче не было явно\n      // Сейчас просто игнорируем\n      return;\n    }\n  };\n\n  // РЕОРДЕР при перетаскивании внутри одной droppable\n  function reorderInSameDroppable(droppableId, fromIndex, toIndex) {\n    // droppableId может быть \"favorites\", \"cat:video\", \"folder:video\"\n    // будем хранить всё в links, нужно найти нужную группу\n\n    setLinks(prevLinks => {\n      // Копию массив\n      const newLinks = [...prevLinks];\n      // Определяем массив ссылок, которые сейчас видит droppable\n      // favorites => l.category === 'favorite'\n      // cat:NAME => l.category === NAME, но без папки?\n      // folder:NAME => l.category === NAME, все?\n\n      let droppableFilter;\n      if (droppableId === 'favorites') {\n        droppableFilter = l => l.category === 'favorite';\n      } else if (droppableId.startsWith('folder:')) {\n        // папка\n        const catName = droppableId.replace('folder:', '');\n        droppableFilter = l => l.category === catName;\n      } else if (droppableId.startsWith('cat:')) {\n        // категория\n        const catName = droppableId.replace('cat:', '');\n        droppableFilter = l => l.category === catName;\n      } else {\n        // неизвестно\n        return newLinks;\n      }\n\n      // Получаем список ссылок, которые в этой droppable\n      const droppableLinks = newLinks.filter(droppableFilter);\n\n      // Надо учесть, что если это категория, мы показываем первые 3\n      // + 4-й = папка (не двигается).\n      // => reorder только первые 3\n      let maxCount = droppableLinks.length;\n      let skipFolder = false;\n\n      // Если droppableId начинается с 'cat:' => \n      // ... у нас может быть папка, которая 4-я, \n      // но она не reorderable. \n      // => reorder только 3\n      if (droppableId.startsWith('cat:') && droppableLinks.length > 3) {\n        maxCount = 3;\n        skipFolder = true;\n      }\n\n      // reorder\n      if (fromIndex >= maxCount || toIndex >= maxCount) {\n        // Нельзя двинуть/target > 3 => игнорируем\n        return newLinks;\n      }\n\n      // droppableLinksIndices хранит индексы в global newLinks\n      const droppableLinksIndices = droppableLinks.map(x => newLinks.indexOf(x));\n\n      // itemIndexInDroppable => droppableLinksIndices[fromIndex]\n      const itemGlobalIndex = droppableLinksIndices[fromIndex];\n\n      // убираем\n      newLinks.splice(itemGlobalIndex, 1);\n\n      // targetIndexInGlobal = droppableLinksIndices[toIndex], \n      //  но после удаления itemGlobalIndex меняется\n      // лучше аккуратно вставить\n\n      // Если fromIndex < toIndex => globalIndex toIndex + 1\n      // Но проще: уберём item, потом droppableLinksIndices[toIndex] - \n      //   потому что этот массив тоже изменился \n      //   => проще recalulate droppableLinksIndices?\n      //   ... \n\n      // Легче сделать reorder локально, потом слияние\n\n      const subArr = droppableLinks.slice(0, maxCount);\n      // remove item from subArr\n      const [removed] = subArr.splice(fromIndex, 1);\n      subArr.splice(toIndex, 0, removed);\n\n      // Теперь subArr - это новый порядок (для первых 3),\n      // если skipFolder, нужно append folder\n      if (skipFolder && droppableLinks.length > 3) {\n        subArr.push(droppableLinks[3]);\n      }\n      // Остальные, если >4, subArr.push(...theRest)? \n      // Но на UI показываем только 4 anyway.\n\n      // Теперь соберём назад\n      // droppableLinks => subArr + theRest (которое >4)\n      // TheRest\n      if (droppableLinks.length > 4 && skipFolder) {\n        // 5+ -> subArr + droppableLinks.slice(4)\n        subArr.push(...droppableLinks.slice(4));\n      }\n\n      // subArr теперь это reordered droppableLinks\n      // заменим в newLinks\n      // Удалим все droppableFilter\n      const newArrWithoutThisDroppable = newLinks.filter(l => !droppableFilter(l));\n      // добавим subArr (reordered) \n      const merged = [...newArrWithoutThisDroppable, ...subArr];\n      return merged;\n    });\n  }\n\n  // Собираем full sorted links\n  const favoriteLinks = sortedLinks.filter(l => l.category === 'favorite');\n  const otherLinks = sortedLinks.filter(l => l.category !== 'favorite');\n\n  // Группируем otherLinks\n  const grouped = groupBy(otherLinks, l => l.category || 'Без категории');\n  const groupedCategories = Object.keys(grouped).map(catName => ({\n    name: catName,\n    items: grouped[catName]\n  }));\n\n  // DRAGGABLES\n  function renderFavoriteLinks() {\n    return favoriteLinks.map((link, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: `fav-${index}`,\n      index: index,\n      isDragDisabled: sortBy !== 'manual',\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        style: provided.draggableProps.style,\n        children: /*#__PURE__*/_jsxDEV(LinkBlock, {\n          title: link.title,\n          url: link.url,\n          customIcon: link.customIcon,\n          isRemoveMode: isRemoveMode,\n          onRemove: () => {\n            const globalIndex = links.indexOf(link);\n            if (globalIndex >= 0) handleRemoveLink(globalIndex);\n          },\n          onEdit: () => {\n            const globalIndex = links.indexOf(link);\n            if (globalIndex >= 0) handleEditLink(globalIndex);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, `fav-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this));\n  }\n  function renderCategoryDroppable(catBlock) {\n    // catBlock.name, catBlock.items\n    // droppableId => `cat:${catBlock.name}`\n    // 1) firstThree draggable, 4th is folder if hasMore\n    // The rest hidden\n    const firstThree = catBlock.items.slice(0, 3);\n    const hasMore = catBlock.items.length > 3;\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: `cat:${catBlock.name}`,\n      direction: \"horizontal\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: catBlock.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-links\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [firstThree.map((link, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: `cat-${catBlock.name}-${idx}`,\n            index: idx\n            // Folder is not in these 3\n            ,\n            isDragDisabled: sortBy !== 'manual',\n            children: providedDrag => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: providedDrag.innerRef,\n              ...providedDrag.draggableProps,\n              ...providedDrag.dragHandleProps,\n              style: providedDrag.draggableProps.style,\n              children: /*#__PURE__*/_jsxDEV(LinkBlock, {\n                title: link.title,\n                url: link.url,\n                customIcon: link.customIcon,\n                isRemoveMode: isRemoveMode,\n                onRemove: () => {\n                  const globalIndex = links.indexOf(link);\n                  if (globalIndex >= 0) handleRemoveLink(globalIndex);\n                },\n                onEdit: () => {\n                  const globalIndex = links.indexOf(link);\n                  if (globalIndex >= 0) handleEditLink(globalIndex);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this)\n          }, `cat-${catBlock.name}-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link-block-wrapper folder-block\",\n            onClick: () => setFolderOpenCat(catBlock.name),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"link-block folder-block-inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(FiMoreHorizontal, {\n                  className: \"folder-more-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tooltip\",\n                children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0435\\u0449\\u0451\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)\n    }, catBlock.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  }\n  function renderCategories() {\n    return groupedCategories.map(catBlock => renderCategoryDroppable(catBlock));\n  }\n\n  // Папка -> droppable => folder:catName\n  function renderFolderModal() {\n    var _groupedCategories$fi;\n    if (!folderOpenCat) return null;\n    const openFolderItems = ((_groupedCategories$fi = groupedCategories.find(c => c.name === folderOpenCat)) === null || _groupedCategories$fi === void 0 ? void 0 : _groupedCategories$fi.items) || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-modal-overlay\",\n      onClick: () => setFolderOpenCat(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"folder-close\",\n          onClick: () => setFolderOpenCat(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", folderOpenCat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `folder:${folderOpenCat}`,\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-links\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [openFolderItems.map((link, idx) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `folder-${folderOpenCat}-${idx}`,\n              index: idx,\n              isDragDisabled: sortBy !== 'manual',\n              children: providedDrag => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: providedDrag.innerRef,\n                ...providedDrag.draggableProps,\n                ...providedDrag.dragHandleProps,\n                style: providedDrag.draggableProps.style,\n                children: /*#__PURE__*/_jsxDEV(LinkBlock, {\n                  title: link.title,\n                  url: link.url,\n                  customIcon: link.customIcon,\n                  isRemoveMode: isRemoveMode,\n                  onRemove: () => {\n                    const globalIndex = links.indexOf(link);\n                    if (globalIndex >= 0) handleRemoveLink(globalIndex);\n                  },\n                  onEdit: () => {\n                    const globalIndex = links.indexOf(link);\n                    if (globalIndex >= 0) handleEditLink(globalIndex);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 23\n              }, this)\n            }, `folder-${folderOpenCat}-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Список категорий (exclude favorite if you want)\n  const allCategories = ['All', ...new Set(links.map(l => l.category).filter(c => c && c !== 'favorite'))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        className: \"menu-btn\",\n        onClick: handleMenuToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkbox\",\n        className: \"toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars\",\n          id: \"bar1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars\",\n          id: \"bar2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars\",\n          id: \"bar3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarMenu, {\n      isOpen: isMenuOpen,\n      onClose: handleMenuToggle,\n      onAddLink: handleAddLink,\n      toggleTheme: toggleTheme,\n      toggleRemoveMode: toggleRemoveMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"image/*\",\n      onChange: handleSelectFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"favorites\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"favorites-row\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"favorites-links\",\n              children: [renderFavoriteLinks(), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"sorting-category-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: sortBy,\n              onChange: e => setSortBy(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"manual\",\n                children: \"\\u0420\\u0443\\u0447\\u043D\\u0430\\u044F (Drag & Drop)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"alphabetical\",\n                children: \"\\u041F\\u043E \\u0430\\u043B\\u0444\\u0430\\u0432\\u0438\\u0442\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"date\",\n                children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435 (\\u043D\\u043E\\u0432\\u044B\\u0435 \\u0441\\u0432\\u0435\\u0440\\u0445\\u0443)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCategory,\n              onChange: e => setSelectedCategory(e.target.value),\n              children: allCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat,\n                children: cat\n              }, cat, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '0.3rem',\n                fontSize: '0.85rem',\n                color: 'gray'\n              },\n              children: \"(\\u0412\\u0441\\u0435\\u0433\\u0434\\u0430 \\u043F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442\\u0441\\u044F 'favorite' + \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u0430\\u044F \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"categories-grid\",\n          children: renderCategories()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"widgets-section\",\n        children: [/*#__PURE__*/_jsxDEV(WeatherWidget, {\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClockWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoWidget, {\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), renderFolderModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 476,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GIQ5Kqe2pEQpIIh/fjvooJFe6uA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FiMoreHorizontal","LinkBlock","SidebarMenu","WeatherWidget","ClockWidget","TodoWidget","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","groupBy","array","keyFn","result","forEach","item","key","push","App","_s","theme","setTheme","links","setLinks","isRemoveMode","setIsRemoveMode","isMenuOpen","setIsMenuOpen","sortBy","setSortBy","selectedCategory","setSelectedCategory","editIndex","setEditIndex","fileInputRef","folderOpenCat","setFolderOpenCat","storedTheme","localStorage","getItem","storedLinks","JSON","parse","title","url","customIcon","category","createdAt","Date","now","setItem","stringify","document","documentElement","classList","remove","add","toggleTheme","prev","toggleRemoveMode","handleAddLink","newLink","isDuplicate","some","l","alert","handleRemoveLink","index","filter","_","i","handleMenuToggle","handleEditLink","current","value","click","handleSelectFile","e","file","target","files","reader","FileReader","onload","evt","base64Data","updated","readAsDataURL","filteredLinks","sortedLinks","sort","a","b","localeCompare","sensitivity","onDragEnd","destination","source","droppableId","reorderInSameDroppable","fromIndex","toIndex","prevLinks","newLinks","droppableFilter","startsWith","catName","replace","droppableLinks","maxCount","length","skipFolder","droppableLinksIndices","map","x","indexOf","itemGlobalIndex","splice","subArr","slice","removed","newArrWithoutThisDroppable","merged","favoriteLinks","otherLinks","grouped","groupedCategories","Object","keys","name","items","renderFavoriteLinks","link","draggableId","isDragDisabled","children","provided","ref","innerRef","draggableProps","dragHandleProps","style","onRemove","globalIndex","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","renderCategoryDroppable","catBlock","firstThree","hasMore","direction","className","droppableProps","idx","providedDrag","onClick","placeholder","renderCategories","renderFolderModal","_groupedCategories$fi","openFolderItems","find","c","stopPropagation","allCategories","Set","type","id","htmlFor","isOpen","onClose","onAddLink","display","accept","onChange","cat","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/GitHub/Home-Page/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport './App.css';\n\nimport LinkBlock from './components/LinkBlock';\nimport SidebarMenu from './components/SidebarMenu';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\nimport TodoWidget from './components/widgets/TodoWidget';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nfunction groupBy(array, keyFn) {\n  const result = {};\n  array.forEach((item) => {\n    const key = keyFn(item);\n    if (!result[key]) {\n      result[key] = [];\n    }\n    result[key].push(item);\n  });\n  return result;\n}\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [links, setLinks] = useState([]);\n  const [isRemoveMode, setIsRemoveMode] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  // Сортировка / Категория (как прежде)\n  const [sortBy, setSortBy] = useState('manual');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n\n  const [editIndex, setEditIndex] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Папка, открытая сейчас\n  const [folderOpenCat, setFolderOpenCat] = useState(null);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) setTheme(storedTheme);\n\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      setLinks([\n        {\n          title: 'Google',\n          url: 'https://www.google.com',\n          customIcon: '',\n          category: 'favorite',\n          createdAt: Date.now(),\n        },\n        {\n          title: 'YouTube',\n          url: 'https://www.youtube.com',\n          customIcon: '',\n          category: 'video',\n          createdAt: Date.now(),\n        },\n      ]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  useEffect(() => {\n    document.documentElement.classList.remove('light','dark');\n    document.documentElement.classList.add(theme);\n  }, [theme]);\n\n  // ==== FUNCTIONS ====\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  const toggleRemoveMode = () => {\n    setIsRemoveMode((prev) => !prev);\n  };\n\n  const handleAddLink = (newLink) => {\n    const isDuplicate = links.some((l) => l.url === newLink.url);\n    if (isDuplicate) {\n      alert('Такая ссылка уже добавлена!');\n      return;\n    }\n    setLinks((prev) => [...prev, newLink]);\n  };\n\n  const handleRemoveLink = (index) => {\n    setLinks((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen((prev) => !prev);\n  };\n\n  const handleEditLink = (index) => {\n    setEditIndex(index);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleSelectFile = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const base64Data = evt.target.result;\n      setLinks((prev) => {\n        const updated = [...prev];\n        updated[editIndex] = {\n          ...updated[editIndex],\n          customIcon: base64Data,\n        };\n        return updated;\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // ==== FILTERING / SORTING\n  let filteredLinks;\n  if (selectedCategory === 'All') {\n    filteredLinks = links;\n  } else {\n    // Если выбрана какая-то категория, + показываем favorite\n    filteredLinks = links.filter(\n      (l) => l.category === 'favorite' || l.category === selectedCategory\n    );\n  }\n\n  const sortedLinks = [...filteredLinks];\n  if (sortBy === 'alphabetical') {\n    sortedLinks.sort((a, b) =>\n      a.title.localeCompare(b.title, 'ru', { sensitivity: 'base' })\n    );\n  } else if (sortBy === 'date') {\n    sortedLinks.sort((a, b) => b.createdAt - a.createdAt);\n  }\n  // manual => drag & drop\n\n  // Drag & Drop\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    // source { droppableId, index }, destination { droppableId, index }\n    const { source, destination } = result;\n\n    // Если сортировка не manual, игнорируем\n    if (sortBy !== 'manual') return;\n\n    // Если user перетаскивает в ту же категорию / droppable\n    if (source.droppableId === destination.droppableId) {\n      // reorder внутри той же droppable\n      reorderInSameDroppable(source.droppableId, source.index, destination.index);\n    } else {\n      // Если не хотим меж-дроппл перенос, можно игнорировать\n      // ИЛИ поддержать перенос? По задаче не было явно\n      // Сейчас просто игнорируем\n      return;\n    }\n  };\n\n  // РЕОРДЕР при перетаскивании внутри одной droppable\n  function reorderInSameDroppable(droppableId, fromIndex, toIndex) {\n    // droppableId может быть \"favorites\", \"cat:video\", \"folder:video\"\n    // будем хранить всё в links, нужно найти нужную группу\n\n    setLinks((prevLinks) => {\n      // Копию массив\n      const newLinks = [...prevLinks];\n      // Определяем массив ссылок, которые сейчас видит droppable\n      // favorites => l.category === 'favorite'\n      // cat:NAME => l.category === NAME, но без папки?\n      // folder:NAME => l.category === NAME, все?\n\n      let droppableFilter;\n      if (droppableId === 'favorites') {\n        droppableFilter = (l) => l.category === 'favorite';\n      } else if (droppableId.startsWith('folder:')) {\n        // папка\n        const catName = droppableId.replace('folder:', '');\n        droppableFilter = (l) => l.category === catName;\n      } else if (droppableId.startsWith('cat:')) {\n        // категория\n        const catName = droppableId.replace('cat:', '');\n        droppableFilter = (l) => l.category === catName;\n      } else {\n        // неизвестно\n        return newLinks;\n      }\n\n      // Получаем список ссылок, которые в этой droppable\n      const droppableLinks = newLinks.filter(droppableFilter);\n\n      // Надо учесть, что если это категория, мы показываем первые 3\n      // + 4-й = папка (не двигается).\n      // => reorder только первые 3\n      let maxCount = droppableLinks.length; \n      let skipFolder = false;\n\n      // Если droppableId начинается с 'cat:' => \n      // ... у нас может быть папка, которая 4-я, \n      // но она не reorderable. \n      // => reorder только 3\n      if (droppableId.startsWith('cat:') && droppableLinks.length > 3) {\n        maxCount = 3; \n        skipFolder = true;\n      }\n\n      // reorder\n      if (fromIndex >= maxCount || toIndex >= maxCount) {\n        // Нельзя двинуть/target > 3 => игнорируем\n        return newLinks;\n      }\n\n      // droppableLinksIndices хранит индексы в global newLinks\n      const droppableLinksIndices = droppableLinks.map((x) => newLinks.indexOf(x));\n\n      // itemIndexInDroppable => droppableLinksIndices[fromIndex]\n      const itemGlobalIndex = droppableLinksIndices[fromIndex];\n\n      // убираем\n      newLinks.splice(itemGlobalIndex, 1);\n\n      // targetIndexInGlobal = droppableLinksIndices[toIndex], \n      //  но после удаления itemGlobalIndex меняется\n      // лучше аккуратно вставить\n\n      // Если fromIndex < toIndex => globalIndex toIndex + 1\n      // Но проще: уберём item, потом droppableLinksIndices[toIndex] - \n      //   потому что этот массив тоже изменился \n      //   => проще recalulate droppableLinksIndices?\n      //   ... \n\n      // Легче сделать reorder локально, потом слияние\n\n      const subArr = droppableLinks.slice(0, maxCount); \n      // remove item from subArr\n      const [removed] = subArr.splice(fromIndex, 1);\n      subArr.splice(toIndex, 0, removed);\n\n      // Теперь subArr - это новый порядок (для первых 3),\n      // если skipFolder, нужно append folder\n      if (skipFolder && droppableLinks.length > 3) {\n        subArr.push(droppableLinks[3]); \n      }\n      // Остальные, если >4, subArr.push(...theRest)? \n      // Но на UI показываем только 4 anyway.\n\n      // Теперь соберём назад\n      // droppableLinks => subArr + theRest (которое >4)\n      // TheRest\n      if (droppableLinks.length > 4 && skipFolder) {\n        // 5+ -> subArr + droppableLinks.slice(4)\n        subArr.push(...droppableLinks.slice(4));\n      }\n\n      // subArr теперь это reordered droppableLinks\n      // заменим в newLinks\n      // Удалим все droppableFilter\n      const newArrWithoutThisDroppable = newLinks.filter(\n        (l) => !droppableFilter(l)\n      );\n      // добавим subArr (reordered) \n      const merged = [...newArrWithoutThisDroppable, ...subArr];\n\n      return merged;\n    });\n  }\n\n  // Собираем full sorted links\n  const favoriteLinks = sortedLinks.filter((l) => l.category === 'favorite');\n  const otherLinks = sortedLinks.filter((l) => l.category !== 'favorite');\n\n  // Группируем otherLinks\n  const grouped = groupBy(otherLinks, (l) => l.category || 'Без категории');\n  const groupedCategories = Object.keys(grouped).map((catName) => ({\n    name: catName,\n    items: grouped[catName],\n  }));\n\n  // DRAGGABLES\n  function renderFavoriteLinks() {\n    return favoriteLinks.map((link, index) => (\n      <Draggable\n        key={`fav-${index}`}\n        draggableId={`fav-${index}`}\n        index={index}\n        isDragDisabled={sortBy !== 'manual'}\n      >\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={provided.draggableProps.style}\n          >\n            <LinkBlock\n              title={link.title}\n              url={link.url}\n              customIcon={link.customIcon}\n              isRemoveMode={isRemoveMode}\n              onRemove={() => {\n                const globalIndex = links.indexOf(link);\n                if (globalIndex >= 0) handleRemoveLink(globalIndex);\n              }}\n              onEdit={() => {\n                const globalIndex = links.indexOf(link);\n                if (globalIndex >= 0) handleEditLink(globalIndex);\n              }}\n            />\n          </div>\n        )}\n      </Draggable>\n    ));\n  }\n\n  function renderCategoryDroppable(catBlock) {\n    // catBlock.name, catBlock.items\n    // droppableId => `cat:${catBlock.name}`\n    // 1) firstThree draggable, 4th is folder if hasMore\n    // The rest hidden\n    const firstThree = catBlock.items.slice(0, 3);\n    const hasMore = catBlock.items.length > 3;\n\n    return (\n      <Droppable key={catBlock.name} droppableId={`cat:${catBlock.name}`} direction=\"horizontal\">\n        {(provided) => (\n          <div className=\"category-section\">\n            <h3>{catBlock.name}</h3>\n            <div\n              className=\"category-links\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {firstThree.map((link, idx) => (\n                <Draggable\n                  key={`cat-${catBlock.name}-${idx}`}\n                  draggableId={`cat-${catBlock.name}-${idx}`}\n                  index={idx}\n                  // Folder is not in these 3\n                  isDragDisabled={sortBy !== 'manual'}\n                >\n                  {(providedDrag) => (\n                    <div\n                      ref={providedDrag.innerRef}\n                      {...providedDrag.draggableProps}\n                      {...providedDrag.dragHandleProps}\n                      style={providedDrag.draggableProps.style}\n                    >\n                      <LinkBlock\n                        title={link.title}\n                        url={link.url}\n                        customIcon={link.customIcon}\n                        isRemoveMode={isRemoveMode}\n                        onRemove={() => {\n                          const globalIndex = links.indexOf(link);\n                          if (globalIndex >= 0) handleRemoveLink(globalIndex);\n                        }}\n                        onEdit={() => {\n                          const globalIndex = links.indexOf(link);\n                          if (globalIndex >= 0) handleEditLink(globalIndex);\n                        }}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n\n              {hasMore && (\n                <div\n                  className=\"link-block-wrapper folder-block\"\n                  onClick={() => setFolderOpenCat(catBlock.name)}\n                >\n                  <div className=\"link-block folder-block-inner\">\n                    <div className=\"icon-wrapper\">\n                      <FiMoreHorizontal className=\"folder-more-icon\" />\n                    </div>\n                    <div className=\"tooltip\">Показать ещё</div>\n                  </div>\n                </div>\n              )}\n              {provided.placeholder}\n            </div>\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n\n  function renderCategories() {\n    return groupedCategories.map((catBlock) => renderCategoryDroppable(catBlock));\n  }\n\n  // Папка -> droppable => folder:catName\n  function renderFolderModal() {\n    if (!folderOpenCat) return null;\n    const openFolderItems = groupedCategories.find(\n      (c) => c.name === folderOpenCat\n    )?.items || [];\n\n    return (\n      <div className=\"folder-modal-overlay\" onClick={() => setFolderOpenCat(null)}>\n        <div className=\"folder-modal-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"folder-close\" onClick={() => setFolderOpenCat(null)}>\n            ×\n          </button>\n          <h2>Категория: {folderOpenCat}</h2>\n\n          <Droppable droppableId={`folder:${folderOpenCat}`} direction=\"horizontal\">\n            {(provided) => (\n              <div className=\"folder-links\" ref={provided.innerRef} {...provided.droppableProps}>\n                {openFolderItems.map((link, idx) => (\n                  <Draggable\n                    key={`folder-${folderOpenCat}-${idx}`}\n                    draggableId={`folder-${folderOpenCat}-${idx}`}\n                    index={idx}\n                    isDragDisabled={sortBy !== 'manual'}\n                  >\n                    {(providedDrag) => (\n                      <div\n                        ref={providedDrag.innerRef}\n                        {...providedDrag.draggableProps}\n                        {...providedDrag.dragHandleProps}\n                        style={providedDrag.draggableProps.style}\n                      >\n                        <LinkBlock\n                          title={link.title}\n                          url={link.url}\n                          customIcon={link.customIcon}\n                          isRemoveMode={isRemoveMode}\n                          onRemove={() => {\n                            const globalIndex = links.indexOf(link);\n                            if (globalIndex >= 0) handleRemoveLink(globalIndex);\n                          }}\n                          onEdit={() => {\n                            const globalIndex = links.indexOf(link);\n                            if (globalIndex >= 0) handleEditLink(globalIndex);\n                          }}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    );\n  }\n\n  // Список категорий (exclude favorite if you want)\n  const allCategories = [\n    'All',\n    ...new Set(links\n      .map((l) => l.category)\n      .filter((c) => c && c !== 'favorite')\n    ),\n  ];\n\n  return (\n    <div className={`App ${theme}`}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          className=\"menu-btn\"\n          onClick={handleMenuToggle}\n        />\n        <label htmlFor=\"checkbox\" className=\"toggle\">\n          <div className=\"bars\" id=\"bar1\" />\n          <div className=\"bars\" id=\"bar2\" />\n          <div className=\"bars\" id=\"bar3\" />\n        </label>\n      </div>\n\n      <SidebarMenu\n        isOpen={isMenuOpen}\n        onClose={handleMenuToggle}\n        onAddLink={handleAddLink}\n        toggleTheme={toggleTheme}\n        toggleRemoveMode={toggleRemoveMode}\n      />\n\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        onChange={handleSelectFile}\n      />\n\n      <main>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {/* Избранное */}\n          <Droppable droppableId=\"favorites\" direction=\"horizontal\">\n            {(provided) => (\n              <section className=\"favorites-row\" ref={provided.innerRef} {...provided.droppableProps}>\n                <h2>Избранные</h2>\n                <div className=\"favorites-links\">\n                  {renderFavoriteLinks()}\n                  {provided.placeholder}\n                </div>\n              </section>\n            )}\n          </Droppable>\n\n          {/* Панель сортировки / категории */}\n          <section className=\"sorting-category-panel\">\n            <div className=\"sort-block\">\n              <h4>Сортировка</h4>\n              <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n                <option value=\"manual\">Ручная (Drag & Drop)</option>\n                <option value=\"alphabetical\">По алфавиту</option>\n                <option value=\"date\">По дате (новые сверху)</option>\n              </select>\n            </div>\n\n            <div className=\"category-block\">\n              <h4>Категория</h4>\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n              >\n                {allCategories.map((cat) => (\n                  <option key={cat} value={cat}>\n                    {cat}\n                  </option>\n                ))}\n              </select>\n              <p style={{ marginTop: '0.3rem', fontSize: '0.85rem', color: 'gray' }}>\n                (Всегда показывается 'favorite' + выбранная категория)\n              </p>\n            </div>\n          </section>\n\n          {/* Сетка категорий */}\n          <section className=\"categories-grid\">\n            {renderCategories()}\n          </section>\n        </DragDropContext>\n\n        <section className=\"widgets-section\">\n          <WeatherWidget theme={theme} />\n          <ClockWidget />\n          <TodoWidget theme={theme} />\n        </section>\n      </main>\n\n      {/* Модальное окно папки */}\n      {renderFolderModal()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}