{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport LinkForm from './components/LinkForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [links, setLinks] = useState([]);\n\n  // При первом рендере загружаем ссылки из localStorage\n  useEffect(() => {\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      // Если ничего нет, можем задать базовые ссылки\n      setLinks([{\n        title: 'Google',\n        url: 'https://www.google.com'\n      }, {\n        title: 'YouTube',\n        url: 'https://www.youtube.com'\n      }]);\n    }\n  }, []);\n\n  // Каждый раз, когда изменяется массив links, сохраняем его в localStorage\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Функция добавления новой ссылки в список\n  const handleAddLink = newLink => {\n    setLinks(prevLinks => [...prevLinks, newLink]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"link-form-section\",\n      children: /*#__PURE__*/_jsxDEV(LinkForm, {\n        onAddLink: handleAddLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"links-section\",\n      children: links.map((link, index) => /*#__PURE__*/_jsxDEV(LinkBlock, {\n        title: link.title,\n        url: link.url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IWahq7qgiLTHewJtMFIUn+w+RpQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LinkBlock","LinkForm","jsxDEV","_jsxDEV","App","_s","links","setLinks","storedLinks","localStorage","getItem","JSON","parse","title","url","setItem","stringify","handleAddLink","newLink","prevLinks","className","children","onAddLink","fileName","_jsxFileName","lineNumber","columnNumber","map","link","index","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport LinkForm from './components/LinkForm';\n\nfunction App() {\n  const [links, setLinks] = useState([]);\n\n  // При первом рендере загружаем ссылки из localStorage\n  useEffect(() => {\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      // Если ничего нет, можем задать базовые ссылки\n      setLinks([\n        { title: 'Google', url: 'https://www.google.com' },\n        { title: 'YouTube', url: 'https://www.youtube.com' }\n      ]);\n    }\n  }, []);\n\n  // Каждый раз, когда изменяется массив links, сохраняем его в localStorage\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Функция добавления новой ссылки в список\n  const handleAddLink = (newLink) => {\n    setLinks((prevLinks) => [...prevLinks, newLink]);\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"link-form-section\">\n        {/* Форма для добавления ссылок */}\n        <LinkForm onAddLink={handleAddLink} />\n      </section>\n\n      {/* Отображение ссылок */}\n      <section className=\"links-section\">\n        {links.map((link, index) => (\n          <LinkBlock key={index} title={link.title} url={link.url} />\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACrD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC,CAAC,MAAM;MACL;MACAD,QAAQ,CAAC,CACP;QAAEM,KAAK,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAyB,CAAC,EAClD;QAAED,KAAK,EAAE,SAAS;QAAEC,GAAG,EAAE;MAA0B,CAAC,CACrD,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACdU,YAAY,CAACM,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,SAAS,CAACV,KAAK,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMW,aAAa,GAAIC,OAAO,IAAK;IACjCX,QAAQ,CAAEY,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAASiB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAEpClB,OAAA,CAACF,QAAQ;QAACqB,SAAS,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAGVvB,OAAA;MAASiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC/Bf,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB1B,OAAA,CAACH,SAAS;QAAaa,KAAK,EAAEe,IAAI,CAACf,KAAM;QAACC,GAAG,EAAEc,IAAI,CAACd;MAAI,GAAxCe,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACrB,EAAA,CA1CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}