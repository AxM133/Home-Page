{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\components\\\\LinkForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LinkForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinkForm({\n  onAddLink\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n\n  // Проверка корректности URL с помощью конструктора URL\n  const isValidUrl = value => {\n    try {\n      new URL(value);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Функция для выполнения fetch с тайм-аутом\n  const fetchWithTimeout = (url, options, timeout = 3000) => {\n    return Promise.race([fetch(url, options), new Promise((_, reject) => setTimeout(() => reject(new Error('timeout')), timeout))]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (title.trim() === '' || url.trim() === '') return;\n    if (!isValidUrl(url)) {\n      alert('Пожалуйста, введите корректный URL, например, https://example.com');\n      return;\n    }\n    try {\n      // Выполняем запрос с тайм-аутом (3 секунды)\n      const response = await fetchWithTimeout(url, {\n        method: 'HEAD',\n        mode: 'no-cors'\n      }, 3000);\n\n      // В режиме no-cors тип ответа будет \"opaque\", что считается успехом, если не произошло исключение.\n      if (response && (response.ok || response.type === 'opaque')) {\n        onAddLink({\n          title,\n          url\n        });\n        setTitle('');\n        setUrl('');\n      } else {\n        alert('Сайт не найден или недоступен');\n      }\n    } catch (error) {\n      alert('Сайт не найден или недоступен');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"link-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0441\\u044B\\u043B\\u043A\\u0438\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      placeholder: \"URL (\\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440, https://example.com)\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkForm, \"72MpAzgDUQlEdTFufuGkfu+ySnY=\");\n_c = LinkForm;\nexport default LinkForm;\nvar _c;\n$RefreshReg$(_c, \"LinkForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LinkForm","onAddLink","_s","title","setTitle","url","setUrl","isValidUrl","value","URL","error","fetchWithTimeout","options","timeout","Promise","race","fetch","_","reject","setTimeout","Error","handleSubmit","e","preventDefault","trim","alert","response","method","mode","ok","type","onSubmit","className","children","placeholder","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/LinkForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LinkForm.css';\r\n\r\nfunction LinkForm({ onAddLink }) {\r\n  const [title, setTitle] = useState('');\r\n  const [url, setUrl] = useState('');\r\n\r\n  // Проверка корректности URL с помощью конструктора URL\r\n  const isValidUrl = (value) => {\r\n    try {\r\n      new URL(value);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Функция для выполнения fetch с тайм-аутом\r\n  const fetchWithTimeout = (url, options, timeout = 3000) => {\r\n    return Promise.race([\r\n      fetch(url, options),\r\n      new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('timeout')), timeout)\r\n      )\r\n    ]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (title.trim() === '' || url.trim() === '') return;\r\n\r\n    if (!isValidUrl(url)) {\r\n      alert('Пожалуйста, введите корректный URL, например, https://example.com');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Выполняем запрос с тайм-аутом (3 секунды)\r\n      const response = await fetchWithTimeout(url, {\r\n        method: 'HEAD',\r\n        mode: 'no-cors'\r\n      }, 3000);\r\n\r\n      // В режиме no-cors тип ответа будет \"opaque\", что считается успехом, если не произошло исключение.\r\n      if (response && (response.ok || response.type === 'opaque')) {\r\n        onAddLink({ title, url });\r\n        setTitle('');\r\n        setUrl('');\r\n      } else {\r\n        alert('Сайт не найден или недоступен');\r\n      }\r\n    } catch (error) {\r\n      alert('Сайт не найден или недоступен');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"link-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Название ссылки\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"url\"\r\n        placeholder=\"URL (например, https://example.com)\"\r\n        value={url}\r\n        onChange={(e) => setUrl(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Добавить ссылку</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LinkForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}