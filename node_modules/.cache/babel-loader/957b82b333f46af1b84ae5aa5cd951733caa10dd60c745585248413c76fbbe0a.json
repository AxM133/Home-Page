{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\components\\\\WeatherWidget.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport './WeatherWidget.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherWidget({\n  theme\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [cityInput, setCityInput] = useState('');\n  const API_KEY = '4cc9911b0a2723050929b73c2a59e727';\n  useEffect(() => {\n    // При первом рендере читаем значение city из localStorage\n    const storedCity = localStorage.getItem('weatherCity') || '';\n    setCityInput(storedCity);\n    if (!navigator.geolocation) {\n      // Если геолокация недоступна в этом браузере\n      setLoading(false);\n      // Если в localStorage был сохранён город, попробуем загрузить погоду по нему\n      if (storedCity) {\n        fetchWeatherByCity(storedCity);\n      }\n      return;\n    }\n\n    // Пытаемся получить координаты\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, () => {\n      // Если пользователь отклонил геолокацию — пробуем город из localStorage\n      setLoading(false);\n      if (storedCity) {\n        fetchWeatherByCity(storedCity);\n      }\n    });\n  }, []);\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      setLoading(true);\n      const currentRes = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!currentRes.ok) throw new Error('Не удалось получить погоду');\n      const currentData = await currentRes.json();\n      setWeather({\n        temp: Math.round(currentData.main.temp),\n        description: currentData.weather[0].description,\n        name: currentData.name\n      });\n      const forecastRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз');\n      const forecastData = await forecastRes.json();\n      const processed = processForecastData(forecastData.list);\n      setForecast(processed);\n    } catch (err) {\n      alert(err.message);\n      setWeather(null);\n      setForecast([]);\n    }\n    setLoading(false);\n  };\n  const fetchWeatherByCity = async cityName => {\n    try {\n      setLoading(true);\n      const currentRes = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(cityName)}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!currentRes.ok) throw new Error('Город не найден');\n      const currentData = await currentRes.json();\n      setWeather({\n        temp: Math.round(currentData.main.temp),\n        description: currentData.weather[0].description,\n        name: currentData.name\n      });\n      const forecastRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(cityName)}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз');\n      const forecastData = await forecastRes.json();\n      const processed = processForecastData(forecastData.list);\n      setForecast(processed);\n    } catch (error) {\n      alert(error.message);\n      setWeather(null);\n      setForecast([]);\n    }\n    setLoading(false);\n  };\n  const processForecastData = list => {\n    const dayMap = {};\n    list.forEach(item => {\n      const dateTxt = item.dt_txt.split(' ')[0];\n      const temp = item.main.temp;\n      if (!dayMap[dateTxt]) {\n        dayMap[dateTxt] = {\n          min: temp,\n          max: temp\n        };\n      } else {\n        if (temp < dayMap[dateTxt].min) dayMap[dateTxt].min = temp;\n        if (temp > dayMap[dateTxt].max) dayMap[dateTxt].max = temp;\n      }\n    });\n    const entries = Object.keys(dayMap).map(date => ({\n      date,\n      min: Math.round(dayMap[date].min),\n      max: Math.round(dayMap[date].max)\n    }));\n    entries.sort((a, b) => a.date > b.date ? 1 : -1);\n    return entries.slice(0, 4);\n  };\n  const handleWidgetClick = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleCitySubmit = e => {\n    e.preventDefault();\n    if (cityInput.trim()) {\n      // Сохраняем в localStorage выбранный город\n      localStorage.setItem('weatherCity', cityInput.trim());\n      fetchWeatherByCity(cityInput.trim());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget widget\",\n      onClick: handleWidgetClick,\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), !loading && weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-city\",\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-temp\",\n          children: [weather.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-desc\",\n          children: weather.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !loading && !weather && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"weather-modal-close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"weather-modal-title\",\n          children: \"\\u041F\\u041E\\u0413\\u041E\\u0414\\u0410\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-today\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-city\",\n            children: weather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-temp\",\n            children: [weather.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-desc\",\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-city-form\",\n          onSubmit: handleCitySubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\",\n            value: cityInput,\n            onChange: e => setCityInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), forecast && forecast.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-forecast\",\n          children: forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-forecast-day\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wf-dayName\",\n              children: new Date(day.date).toLocaleDateString('ru-RU', {\n                weekday: 'short',\n                day: 'numeric',\n                month: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wf-temps\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wf-min\",\n                children: [day.min, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wf-max\",\n                children: [day.max, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, day.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(WeatherWidget, \"IiSDy1obGq/oDIzxCadRwUBDsMo=\");\n_c = WeatherWidget;\nexport default WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherWidget","theme","_s","weather","setWeather","forecast","setForecast","loading","setLoading","isModalOpen","setIsModalOpen","cityInput","setCityInput","API_KEY","storedCity","localStorage","getItem","navigator","geolocation","fetchWeatherByCity","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherByCoords","lat","lon","currentRes","fetch","ok","Error","currentData","json","temp","Math","round","main","description","name","forecastRes","forecastData","processed","processForecastData","list","err","alert","message","cityName","encodeURIComponent","error","dayMap","forEach","item","dateTxt","dt_txt","split","min","max","entries","Object","keys","map","date","sort","a","b","slice","handleWidgetClick","closeModal","handleCitySubmit","e","preventDefault","trim","setItem","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","day","Date","toLocaleDateString","weekday","month","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/WeatherWidget.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './WeatherWidget.css';\r\n\r\nfunction WeatherWidget({ theme }) {\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cityInput, setCityInput] = useState('');\r\n  const API_KEY = '4cc9911b0a2723050929b73c2a59e727';\r\n\r\n  useEffect(() => {\r\n    // При первом рендере читаем значение city из localStorage\r\n    const storedCity = localStorage.getItem('weatherCity') || '';\r\n    setCityInput(storedCity);\r\n\r\n    if (!navigator.geolocation) {\r\n      // Если геолокация недоступна в этом браузере\r\n      setLoading(false);\r\n      // Если в localStorage был сохранён город, попробуем загрузить погоду по нему\r\n      if (storedCity) {\r\n        fetchWeatherByCity(storedCity);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Пытаемся получить координаты\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        fetchWeatherByCoords(latitude, longitude);\r\n      },\r\n      () => {\r\n        // Если пользователь отклонил геолокацию — пробуем город из localStorage\r\n        setLoading(false);\r\n        if (storedCity) {\r\n          fetchWeatherByCity(storedCity);\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const fetchWeatherByCoords = async (lat, lon) => {\r\n    try {\r\n      setLoading(true);\r\n      const currentRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!currentRes.ok) throw new Error('Не удалось получить погоду');\r\n      const currentData = await currentRes.json();\r\n      setWeather({\r\n        temp: Math.round(currentData.main.temp),\r\n        description: currentData.weather[0].description,\r\n        name: currentData.name\r\n      });\r\n\r\n      const forecastRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз');\r\n      const forecastData = await forecastRes.json();\r\n      const processed = processForecastData(forecastData.list);\r\n      setForecast(processed);\r\n    } catch (err) {\r\n      alert(err.message);\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchWeatherByCity = async (cityName) => {\r\n    try {\r\n      setLoading(true);\r\n      const currentRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(\r\n          cityName\r\n        )}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!currentRes.ok) throw new Error('Город не найден');\r\n      const currentData = await currentRes.json();\r\n      setWeather({\r\n        temp: Math.round(currentData.main.temp),\r\n        description: currentData.weather[0].description,\r\n        name: currentData.name\r\n      });\r\n\r\n      const forecastRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(\r\n          cityName\r\n        )}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз');\r\n      const forecastData = await forecastRes.json();\r\n      const processed = processForecastData(forecastData.list);\r\n      setForecast(processed);\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const processForecastData = (list) => {\r\n    const dayMap = {};\r\n    list.forEach((item) => {\r\n      const dateTxt = item.dt_txt.split(' ')[0]; \r\n      const temp = item.main.temp;\r\n      if (!dayMap[dateTxt]) {\r\n        dayMap[dateTxt] = { min: temp, max: temp };\r\n      } else {\r\n        if (temp < dayMap[dateTxt].min) dayMap[dateTxt].min = temp;\r\n        if (temp > dayMap[dateTxt].max) dayMap[dateTxt].max = temp;\r\n      }\r\n    });\r\n\r\n    const entries = Object.keys(dayMap).map((date) => ({\r\n      date,\r\n      min: Math.round(dayMap[date].min),\r\n      max: Math.round(dayMap[date].max)\r\n    }));\r\n    entries.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n\r\n    return entries.slice(0, 4);\r\n  };\r\n\r\n  const handleWidgetClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCitySubmit = (e) => {\r\n    e.preventDefault();\r\n    if (cityInput.trim()) {\r\n      // Сохраняем в localStorage выбранный город\r\n      localStorage.setItem('weatherCity', cityInput.trim());\r\n      fetchWeatherByCity(cityInput.trim());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"weather-widget widget\" onClick={handleWidgetClick}>\r\n        {loading && <p>Загрузка погоды...</p>}\r\n\r\n        {!loading && weather && (\r\n          <>\r\n            <div className=\"weather-city\">{weather.name}</div>\r\n            <div className=\"weather-temp\">{weather.temp}°C</div>\r\n            <div className=\"weather-desc\">{weather.description}</div>\r\n          </>\r\n        )}\r\n\r\n        {!loading && !weather && (\r\n          <p>Погода недоступна</p>\r\n        )}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className={`weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`}>\r\n          <div className=\"weather-modal-content\">\r\n            <button className=\"weather-modal-close\" onClick={closeModal}>×</button>\r\n            <h2 className=\"weather-modal-title\">ПОГОДА</h2>\r\n\r\n            {weather && (\r\n              <div className=\"weather-today\">\r\n                <div className=\"wt-city\">{weather.name}</div>\r\n                <div className=\"wt-temp\">{weather.temp}°C</div>\r\n                <div className=\"wt-desc\">{weather.description}</div>\r\n              </div>\r\n            )}\r\n\r\n            <form className=\"weather-city-form\" onSubmit={handleCitySubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Введите город...\"\r\n                value={cityInput}\r\n                onChange={(e) => setCityInput(e.target.value)}\r\n              />\r\n              <button type=\"submit\">OK</button>\r\n            </form>\r\n\r\n            <hr />\r\n            {forecast && forecast.length > 0 ? (\r\n              <div className=\"weather-forecast\">\r\n                {forecast.map((day) => (\r\n                  <div key={day.date} className=\"weather-forecast-day\">\r\n                    <div className=\"wf-dayName\">\r\n                      {new Date(day.date).toLocaleDateString('ru-RU', {\r\n                        weekday: 'short',\r\n                        day: 'numeric',\r\n                        month: 'numeric'\r\n                      })}\r\n                    </div>\r\n                    <div className=\"wf-temps\">\r\n                      <span className=\"wf-min\">{day.min}°C</span> - <span className=\"wf-max\">{day.max}°C</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>Нет данных по прогнозу</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WeatherWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}