{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function WeatherWidget(){const[weather,setWeather]=useState(null);useEffect(()=>{// Пример использования геолокации\nnavigator.geolocation.getCurrentPosition(position=>{// Здесь можно сделать запрос к API погоды, используя координаты\n// Пока для демонстрации установим статические данные\nsetWeather({temperature:25,condition:'Солнечно'});},error=>{console.error('Ошибка получения геолокации:',error);setWeather({temperature:'-',condition:'Нет данных'});});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"weather-widget widget\",children:weather?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[weather.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"p\",{children:weather.condition})]}):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"})});}export default WeatherWidget;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","WeatherWidget","weather","setWeather","navigator","geolocation","getCurrentPosition","position","temperature","condition","error","console","className","children"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/WeatherWidget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction WeatherWidget() {\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Пример использования геолокации\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      // Здесь можно сделать запрос к API погоды, используя координаты\r\n      // Пока для демонстрации установим статические данные\r\n      setWeather({ temperature: 25, condition: 'Солнечно' });\r\n    }, error => {\r\n      console.error('Ошибка получения геолокации:', error);\r\n      setWeather({ temperature: '-', condition: 'Нет данных' });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"weather-widget widget\">\r\n      {weather ? (\r\n        <>\r\n          <p>{weather.temperature}°C</p>\r\n          <p>{weather.condition}</p>\r\n        </>\r\n      ) : (\r\n        <p>Загрузка погоды...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherWidget;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEnD,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACAU,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,EAAI,CACnD;AACA;AACAJ,UAAU,CAAC,CAAEK,WAAW,CAAE,EAAE,CAAEC,SAAS,CAAE,UAAW,CAAC,CAAC,CACxD,CAAC,CAAEC,KAAK,EAAI,CACVC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDP,UAAU,CAAC,CAAEK,WAAW,CAAE,GAAG,CAAEC,SAAS,CAAE,YAAa,CAAC,CAAC,CAC3D,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEX,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACnCX,OAAO,cACNN,KAAA,CAAAI,SAAA,EAAAa,QAAA,eACEjB,KAAA,MAAAiB,QAAA,EAAIX,OAAO,CAACM,WAAW,CAAC,OAAE,EAAG,CAAC,cAC9BV,IAAA,MAAAe,QAAA,CAAIX,OAAO,CAACO,SAAS,CAAI,CAAC,EAC1B,CAAC,cAEHX,IAAA,MAAAe,QAAA,CAAG,0FAAkB,CAAG,CACzB,CACE,CAAC,CAEV,CAEA,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}