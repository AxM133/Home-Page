{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\GitHub\\\\Home-Page\\\\src\\\\components\\\\SidebarMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LinkForm from './LinkForm';\nimport './SidebarMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SidebarMenu({\n  isOpen,\n  onClose,\n  onAddLink,\n  toggleTheme,\n  toggleRemoveMode\n}) {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [isDarkChecked, setIsDarkChecked] = useState(false);\n  useEffect(() => {\n    // Считываем сохранённое состояние \"isDark\" из localStorage\n    const storedIsDark = localStorage.getItem('isDark');\n    if (storedIsDark === 'true') {\n      setIsDarkChecked(true);\n    } else {\n      setIsDarkChecked(false);\n    }\n  }, []);\n\n  // При изменении переключателя\n  const handleThemeSwitch = e => {\n    const checked = e.target.checked;\n    setIsDarkChecked(checked);\n    localStorage.setItem('isDark', checked ? 'true' : 'false');\n    toggleTheme();\n  };\n  const handleAddBlockClick = () => {\n    setShowForm(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar-menu ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u0435\\u043D\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddBlockClick,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0431\\u043B\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(LinkForm, {\n        onAddLink: onAddLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleRemoveMode,\n      children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0431\\u043B\\u043E\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch theme-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isDarkChecked,\n        onChange: handleThemeSwitch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(SidebarMenu, \"cT/bD6lfJ9zTIzHnGtHVTSU9XA4=\");\n_c = SidebarMenu;\nexport default SidebarMenu;\nvar _c;\n$RefreshReg$(_c, \"SidebarMenu\");","map":{"version":3,"names":["React","useState","useEffect","LinkForm","jsxDEV","_jsxDEV","SidebarMenu","isOpen","onClose","onAddLink","toggleTheme","toggleRemoveMode","_s","showForm","setShowForm","isDarkChecked","setIsDarkChecked","storedIsDark","localStorage","getItem","handleThemeSwitch","e","checked","target","setItem","handleAddBlockClick","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/GitHub/Home-Page/src/components/SidebarMenu.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LinkForm from './LinkForm';\r\nimport './SidebarMenu.css';\r\n\r\nfunction SidebarMenu({\r\n  isOpen,\r\n  onClose,\r\n  onAddLink,\r\n  toggleTheme,\r\n  toggleRemoveMode\r\n}) {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [isDarkChecked, setIsDarkChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Считываем сохранённое состояние \"isDark\" из localStorage\r\n    const storedIsDark = localStorage.getItem('isDark');\r\n    if (storedIsDark === 'true') {\r\n      setIsDarkChecked(true);\r\n    } else {\r\n      setIsDarkChecked(false);\r\n    }\r\n  }, []);\r\n\r\n  // При изменении переключателя\r\n  const handleThemeSwitch = (e) => {\r\n    const checked = e.target.checked;\r\n    setIsDarkChecked(checked);\r\n    localStorage.setItem('isDark', checked ? 'true' : 'false');\r\n    toggleTheme(); \r\n  };\r\n\r\n  const handleAddBlockClick = () => {\r\n    setShowForm((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar-menu ${isOpen ? 'open' : ''}`}>\r\n      <h2>Меню</h2>\r\n\r\n      <button onClick={handleAddBlockClick}>Добавить блок</button>\r\n      {showForm && (\r\n        <div className=\"add-form-wrapper\">\r\n          <LinkForm onAddLink={onAddLink} />\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={toggleRemoveMode}>Изменение блока</button>\r\n\r\n      {/* Селекты сортировки и категории УДАЛЕНЫ отсюда */}\r\n\r\n      {/* Переключатель темы (switch) внизу */}\r\n      <label className=\"switch theme-switch\">\r\n        <input \r\n          type=\"checkbox\"\r\n          checked={isDarkChecked}\r\n          onChange={handleThemeSwitch}\r\n        />\r\n        <span className=\"slider\" />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}