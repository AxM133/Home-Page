{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\GitHub\\\\Home-Page\\\\src\\\\components\\\\WeatherWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './WeatherWidget.css';\nimport { IoMdSunny, IoMdCloudy, IoMdRainy, IoMdSnow, IoMdThunderstorm, IoMdPartlySunny, IoMdMoon } from 'react-icons/io';\n\n/**\r\n * Возвращает иконку для погоды, исходя из описания (description).\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getWeatherIcon(description) {\n  if (!description) return IoMdPartlySunny;\n  const lowerDesc = description.toLowerCase();\n  if (lowerDesc.includes('clear')) {\n    return IoMdSunny;\n  }\n  if (lowerDesc.includes('cloud')) {\n    return IoMdCloudy;\n  }\n  if (lowerDesc.includes('rain') || lowerDesc.includes('drizzle')) {\n    return IoMdRainy;\n  }\n  if (lowerDesc.includes('snow')) {\n    return IoMdSnow;\n  }\n  if (lowerDesc.includes('thunder')) {\n    return IoMdThunderstorm;\n  }\n  if (lowerDesc.includes('wind') || lowerDesc.includes('breeze')) {\n    return IoMdPartlySunny; // или ваша иконка ветра\n  }\n  if (lowerDesc.includes('night') || lowerDesc.includes('moon')) {\n    return IoMdMoon;\n  }\n  return IoMdPartlySunny;\n}\nfunction WeatherWidget({\n  theme\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [cityInput, setCityInput] = useState('');\n  const [canManualInput, setCanManualInput] = useState(false);\n  // Если за 5 секунд нет погоды — разрешаем ручной ввод\n\n  const API_KEY = 'YOUR_OPENWEATHERMAP_API_KEY'; // ваш реальный ключ\n\n  useEffect(() => {\n    const storedCity = localStorage.getItem('weatherCity') || '';\n    setCityInput(storedCity);\n\n    // Если уже есть city в localStorage, \n    // то НЕ пытаемся получать геолокацию, а сразу грузим погоду по городу\n    if (storedCity) {\n      fetchWeatherByCity(storedCity);\n      return setLoading(false); // завершили загрузку\n    }\n\n    // Если города нет, пробуем геолокацию\n    if (!navigator.geolocation) {\n      // Нет geolocation => нет погоды\n      setWeather(null);\n      setLoading(false);\n      return;\n    }\n\n    // Ставим таймер на 5с — если геолокация не отработала,\n    // разрешаем ручной ввод\n    const timerId = setTimeout(() => {\n      if (loading && !weather) {\n        setCanManualInput(true);\n        setLoading(false);\n      }\n    }, 5000);\n    navigator.geolocation.getCurrentPosition(position => {\n      clearTimeout(timerId);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      fetchWeatherByCoords(latitude, longitude);\n    }, error => {\n      // Пользователь отклонил / ошибка — разрешаем ввод\n      clearTimeout(timerId);\n      setWeather(null);\n      setLoading(false);\n      setCanManualInput(true);\n    });\n    return () => clearTimeout(timerId);\n  }, []);\n  const fetchWeatherByCoords = async (lat, lon) => {\n    try {\n      setLoading(true);\n      const currentRes = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!currentRes.ok) throw new Error('Не удалось получить погоду (coords)');\n      const currentData = await currentRes.json();\n      setWeather({\n        temp: Math.round(currentData.main.temp),\n        description: currentData.weather[0].description,\n        name: currentData.name\n      });\n      const forecastRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз (coords)');\n      const forecastData = await forecastRes.json();\n      const processed = processForecastData(forecastData.list);\n      setForecast(processed);\n    } catch (err) {\n      alert(err.message);\n      setWeather(null);\n      setForecast([]);\n    }\n    setLoading(false);\n  };\n  const fetchWeatherByCity = async cityName => {\n    try {\n      setLoading(true);\n      const currentRes = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(cityName)}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!currentRes.ok) throw new Error('Город не найден (by city)');\n      const currentData = await currentRes.json();\n      setWeather({\n        temp: Math.round(currentData.main.temp),\n        description: currentData.weather[0].description,\n        name: currentData.name\n      });\n      const forecastRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(cityName)}&units=metric&lang=ru&appid=${API_KEY}`);\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз (by city)');\n      const forecastData = await forecastRes.json();\n      const processed = processForecastData(forecastData.list);\n      setForecast(processed);\n    } catch (error) {\n      alert(error.message);\n      setWeather(null);\n      setForecast([]);\n    }\n    setLoading(false);\n  };\n  const processForecastData = list => {\n    const dayMap = {};\n    list.forEach(item => {\n      const dateTxt = item.dt_txt.split(' ')[0];\n      const temp = item.main.temp;\n      if (!dayMap[dateTxt]) {\n        dayMap[dateTxt] = {\n          min: temp,\n          max: temp\n        };\n      } else {\n        if (temp < dayMap[dateTxt].min) dayMap[dateTxt].min = temp;\n        if (temp > dayMap[dateTxt].max) dayMap[dateTxt].max = temp;\n      }\n    });\n    const entries = Object.keys(dayMap).map(date => ({\n      date,\n      min: Math.round(dayMap[date].min),\n      max: Math.round(dayMap[date].max)\n    }));\n    entries.sort((a, b) => a.date > b.date ? 1 : -1);\n    return entries.slice(0, 4);\n  };\n  const handleWidgetClick = () => {\n    // Если уже загрузили погоду, или прошло 5с (canManualInput), \n    // тогда можем открыть модалку\n    if (weather || canManualInput) {\n      setIsModalOpen(true);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleCitySubmit = e => {\n    e.preventDefault();\n    if (cityInput.trim()) {\n      // Сохраняем город\n      localStorage.setItem('weatherCity', cityInput.trim());\n      fetchWeatherByCity(cityInput.trim());\n    }\n  };\n\n  // Пока loading => показываем «Загрузка…»\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget mac-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Если нет погоды (weather === null), \n  // проверяем canManualInput => пользователь может ввести город\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-widget mac-widget\",\n        onClick: handleWidgetClick,\n        children: canManualInput ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445. \\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-modal-content mac-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"weather-modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"weather-modal-title\",\n            children: \"\\u041F\\u041E\\u0413\\u041E\\u0414\\u0410\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0432\\u0440\\u0443\\u0447\\u043D\\u0443\\u044E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"weather-city-form\",\n            onSubmit: handleCitySubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\",\n              value: cityInput,\n              onChange: e => setCityInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n  // Иначе показываем погоду\n  const WeatherIcon = getWeatherIcon(weather.description);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget mac-widget\",\n      onClick: handleWidgetClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-icon\",\n        children: /*#__PURE__*/_jsxDEV(WeatherIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-temp\",\n          children: [weather.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-city-small\",\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-modal-content mac-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"weather-modal-close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"weather-modal-title\",\n          children: \"\\u041F\\u041E\\u0413\\u041E\\u0414\\u0410\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-today\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-icon\",\n            children: /*#__PURE__*/_jsxDEV(WeatherIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-temp\",\n            children: [weather.temp, \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-city\",\n            children: weather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wt-desc\",\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-city-form\",\n          onSubmit: handleCitySubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434...\",\n            value: cityInput,\n            onChange: e => setCityInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), forecast && forecast.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-forecast\",\n          children: forecast.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-forecast-day\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wf-dayName\",\n              children: new Date(day.date).toLocaleDateString('ru-RU', {\n                weekday: 'short',\n                day: 'numeric',\n                month: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wf-temps\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wf-min\",\n                children: [day.min, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wf-max\",\n                children: [day.max, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)]\n          }, day.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(WeatherWidget, \"RhoTtWydrTK/j7hhKW3q53YlDOs=\");\n_c = WeatherWidget;\nexport default WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useState","useEffect","IoMdSunny","IoMdCloudy","IoMdRainy","IoMdSnow","IoMdThunderstorm","IoMdPartlySunny","IoMdMoon","jsxDEV","_jsxDEV","Fragment","_Fragment","getWeatherIcon","description","lowerDesc","toLowerCase","includes","WeatherWidget","theme","_s","weather","setWeather","forecast","setForecast","loading","setLoading","isModalOpen","setIsModalOpen","cityInput","setCityInput","canManualInput","setCanManualInput","API_KEY","storedCity","localStorage","getItem","fetchWeatherByCity","navigator","geolocation","timerId","setTimeout","getCurrentPosition","position","clearTimeout","latitude","longitude","coords","fetchWeatherByCoords","error","lat","lon","currentRes","fetch","ok","Error","currentData","json","temp","Math","round","main","name","forecastRes","forecastData","processed","processForecastData","list","err","alert","message","cityName","encodeURIComponent","dayMap","forEach","item","dateTxt","dt_txt","split","min","max","entries","Object","keys","map","date","sort","a","b","slice","handleWidgetClick","closeModal","handleCitySubmit","e","preventDefault","trim","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","WeatherIcon","length","day","Date","toLocaleDateString","weekday","month","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/GitHub/Home-Page/src/components/WeatherWidget.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './WeatherWidget.css';\r\nimport {\r\n  IoMdSunny,\r\n  IoMdCloudy,\r\n  IoMdRainy,\r\n  IoMdSnow,\r\n  IoMdThunderstorm,\r\n  IoMdPartlySunny,\r\n  IoMdMoon\r\n} from 'react-icons/io';\r\n\r\n/**\r\n * Возвращает иконку для погоды, исходя из описания (description).\r\n */\r\nfunction getWeatherIcon(description) {\r\n  if (!description) return IoMdPartlySunny;\r\n  const lowerDesc = description.toLowerCase();\r\n\r\n  if (lowerDesc.includes('clear')) {\r\n    return IoMdSunny;\r\n  }\r\n  if (lowerDesc.includes('cloud')) {\r\n    return IoMdCloudy;\r\n  }\r\n  if (lowerDesc.includes('rain') || lowerDesc.includes('drizzle')) {\r\n    return IoMdRainy;\r\n  }\r\n  if (lowerDesc.includes('snow')) {\r\n    return IoMdSnow;\r\n  }\r\n  if (lowerDesc.includes('thunder')) {\r\n    return IoMdThunderstorm;\r\n  }\r\n  if (lowerDesc.includes('wind') || lowerDesc.includes('breeze')) {\r\n    return IoMdPartlySunny; // или ваша иконка ветра\r\n  }\r\n  if (lowerDesc.includes('night') || lowerDesc.includes('moon')) {\r\n    return IoMdMoon;\r\n  }\r\n  return IoMdPartlySunny;\r\n}\r\n\r\nfunction WeatherWidget({ theme }) {\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cityInput, setCityInput] = useState('');\r\n  const [canManualInput, setCanManualInput] = useState(false); \r\n  // Если за 5 секунд нет погоды — разрешаем ручной ввод\r\n\r\n  const API_KEY = 'YOUR_OPENWEATHERMAP_API_KEY'; // ваш реальный ключ\r\n\r\n  useEffect(() => {\r\n    const storedCity = localStorage.getItem('weatherCity') || '';\r\n    setCityInput(storedCity);\r\n\r\n    // Если уже есть city в localStorage, \r\n    // то НЕ пытаемся получать геолокацию, а сразу грузим погоду по городу\r\n    if (storedCity) {\r\n      fetchWeatherByCity(storedCity);\r\n      return setLoading(false); // завершили загрузку\r\n    }\r\n\r\n    // Если города нет, пробуем геолокацию\r\n    if (!navigator.geolocation) {\r\n      // Нет geolocation => нет погоды\r\n      setWeather(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Ставим таймер на 5с — если геолокация не отработала,\r\n    // разрешаем ручной ввод\r\n    const timerId = setTimeout(() => {\r\n      if (loading && !weather) {\r\n        setCanManualInput(true);\r\n        setLoading(false);\r\n      }\r\n    }, 5000);\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        clearTimeout(timerId);\r\n        const { latitude, longitude } = position.coords;\r\n        fetchWeatherByCoords(latitude, longitude);\r\n      },\r\n      (error) => {\r\n        // Пользователь отклонил / ошибка — разрешаем ввод\r\n        clearTimeout(timerId);\r\n        setWeather(null);\r\n        setLoading(false);\r\n        setCanManualInput(true);\r\n      }\r\n    );\r\n\r\n    return () => clearTimeout(timerId);\r\n  }, []);\r\n\r\n  const fetchWeatherByCoords = async (lat, lon) => {\r\n    try {\r\n      setLoading(true);\r\n      const currentRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!currentRes.ok) throw new Error('Не удалось получить погоду (coords)');\r\n      const currentData = await currentRes.json();\r\n      setWeather({\r\n        temp: Math.round(currentData.main.temp),\r\n        description: currentData.weather[0].description,\r\n        name: currentData.name\r\n      });\r\n\r\n      const forecastRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз (coords)');\r\n      const forecastData = await forecastRes.json();\r\n      const processed = processForecastData(forecastData.list);\r\n      setForecast(processed);\r\n    } catch (err) {\r\n      alert(err.message);\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchWeatherByCity = async (cityName) => {\r\n    try {\r\n      setLoading(true);\r\n      const currentRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(\r\n          cityName\r\n        )}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!currentRes.ok) throw new Error('Город не найден (by city)');\r\n      const currentData = await currentRes.json();\r\n      setWeather({\r\n        temp: Math.round(currentData.main.temp),\r\n        description: currentData.weather[0].description,\r\n        name: currentData.name\r\n      });\r\n\r\n      const forecastRes = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(\r\n          cityName\r\n        )}&units=metric&lang=ru&appid=${API_KEY}`\r\n      );\r\n      if (!forecastRes.ok) throw new Error('Не удалось получить прогноз (by city)');\r\n      const forecastData = await forecastRes.json();\r\n      const processed = processForecastData(forecastData.list);\r\n      setForecast(processed);\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const processForecastData = (list) => {\r\n    const dayMap = {};\r\n    list.forEach((item) => {\r\n      const dateTxt = item.dt_txt.split(' ')[0];\r\n      const temp = item.main.temp;\r\n      if (!dayMap[dateTxt]) {\r\n        dayMap[dateTxt] = { min: temp, max: temp };\r\n      } else {\r\n        if (temp < dayMap[dateTxt].min) dayMap[dateTxt].min = temp;\r\n        if (temp > dayMap[dateTxt].max) dayMap[dateTxt].max = temp;\r\n      }\r\n    });\r\n\r\n    const entries = Object.keys(dayMap).map((date) => ({\r\n      date,\r\n      min: Math.round(dayMap[date].min),\r\n      max: Math.round(dayMap[date].max),\r\n    }));\r\n    entries.sort((a, b) => (a.date > b.date ? 1 : -1));\r\n\r\n    return entries.slice(0, 4);\r\n  };\r\n\r\n  const handleWidgetClick = () => {\r\n    // Если уже загрузили погоду, или прошло 5с (canManualInput), \r\n    // тогда можем открыть модалку\r\n    if (weather || canManualInput) {\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCitySubmit = (e) => {\r\n    e.preventDefault();\r\n    if (cityInput.trim()) {\r\n      // Сохраняем город\r\n      localStorage.setItem('weatherCity', cityInput.trim());\r\n      fetchWeatherByCity(cityInput.trim());\r\n    }\r\n  };\r\n\r\n  // Пока loading => показываем «Загрузка…»\r\n  if (loading) {\r\n    return (\r\n      <div className=\"weather-widget mac-widget\">\r\n        <p>Загрузка погоды...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Если нет погоды (weather === null), \r\n  // проверяем canManualInput => пользователь может ввести город\r\n  if (!weather) {\r\n    return (\r\n      <>\r\n        <div className=\"weather-widget mac-widget\" onClick={handleWidgetClick}>\r\n          {canManualInput ? (\r\n            <p>Нет данных. Нажмите, чтобы ввести город</p>\r\n          ) : (\r\n            <p>Погода недоступна</p>\r\n          )}\r\n        </div>\r\n        {isModalOpen && (\r\n          <div className={`weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`}>\r\n            <div className=\"weather-modal-content mac-modal\">\r\n              <button className=\"weather-modal-close\" onClick={closeModal}>\r\n                ×\r\n              </button>\r\n              <h2 className=\"weather-modal-title\">ПОГОДА</h2>\r\n              <p>Введите город вручную:</p>\r\n              <form className=\"weather-city-form\" onSubmit={handleCitySubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Введите город...\"\r\n                  value={cityInput}\r\n                  onChange={(e) => setCityInput(e.target.value)}\r\n                />\r\n                <button type=\"submit\">OK</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // Иначе показываем погоду\r\n  const WeatherIcon = getWeatherIcon(weather.description);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"weather-widget mac-widget\" onClick={handleWidgetClick}>\r\n        <div className=\"weather-icon\">\r\n          <WeatherIcon />\r\n        </div>\r\n        <div className=\"weather-info\">\r\n          <div className=\"weather-temp\">{weather.temp} °C</div>\r\n          <div className=\"weather-city-small\">{weather.name}</div>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className={`weather-modal-overlay ${theme === 'dark' ? 'dark-overlay' : ''}`}>\r\n          <div className=\"weather-modal-content mac-modal\">\r\n            <button className=\"weather-modal-close\" onClick={closeModal}>\r\n              ×\r\n            </button>\r\n            <h2 className=\"weather-modal-title\">ПОГОДА</h2>\r\n\r\n            <div className=\"weather-today\">\r\n              <div className=\"wt-icon\">\r\n                <WeatherIcon />\r\n              </div>\r\n              <div className=\"wt-temp\">{weather.temp} °C</div>\r\n              <div className=\"wt-city\">{weather.name}</div>\r\n              <div className=\"wt-desc\">{weather.description}</div>\r\n            </div>\r\n\r\n            <form className=\"weather-city-form\" onSubmit={handleCitySubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Введите город...\"\r\n                value={cityInput}\r\n                onChange={(e) => setCityInput(e.target.value)}\r\n              />\r\n              <button type=\"submit\">OK</button>\r\n            </form>\r\n\r\n            <hr />\r\n            {forecast && forecast.length > 0 ? (\r\n              <div className=\"weather-forecast\">\r\n                {forecast.map((day) => (\r\n                  <div key={day.date} className=\"weather-forecast-day\">\r\n                    <div className=\"wf-dayName\">\r\n                      {new Date(day.date).toLocaleDateString('ru-RU', {\r\n                        weekday: 'short',\r\n                        day: 'numeric',\r\n                        month: 'numeric'\r\n                      })}\r\n                    </div>\r\n                    <div className=\"wf-temps\">\r\n                      <span className=\"wf-min\">{day.min}°C</span> - <span className=\"wf-max\">{day.max}°C</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>Нет данных по прогнозу</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WeatherWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}