{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\components\\\\LinkBlock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LinkBlock.css';\nimport defaultIcon from '../assets/default-icon.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LinkBlock({\n  title,\n  url,\n  customIcon = '',\n  isRemoveMode,\n  onRemove,\n  onEdit\n}) {\n  _s();\n  let domain = '';\n  try {\n    domain = new URL(url).hostname;\n  } catch (error) {}\n  const googleIconUrl = `https://www.google.com/s2/favicons?domain=${domain}&sz=128`;\n\n  // Выбираем, что показать как иконку: если customIcon непустой — берём его,\n  // иначе — Google Favicons\n  const [iconSrc, setIconSrc] = useState(customIcon || googleIconUrl);\n\n  // Если customIcon сменился (пользователь загрузил новую картинку),\n  // обновим локальное состояние, чтобы <img> сразу подхватил\n  useEffect(() => {\n    if (customIcon) {\n      setIconSrc(customIcon);\n    } else {\n      setIconSrc(googleIconUrl);\n    }\n  }, [customIcon, googleIconUrl]);\n  const handleImgError = () => {\n    setIconSrc(defaultIcon);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link-block-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      className: \"link-block\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconSrc,\n          alt: \"icon\",\n          className: \"favicon\",\n          onError: handleImgError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isRemoveMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-block-btn\",\n        onClick: onRemove,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-block-btn\",\n        onClick: onEdit,\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkBlock, \"fHt7lSa4XD8m8Vrbn96XisR8VUo=\");\n_c = LinkBlock;\nexport default LinkBlock;\nvar _c;\n$RefreshReg$(_c, \"LinkBlock\");","map":{"version":3,"names":["React","useState","useEffect","defaultIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkBlock","title","url","customIcon","isRemoveMode","onRemove","onEdit","_s","domain","URL","hostname","error","googleIconUrl","iconSrc","setIconSrc","handleImgError","className","children","href","target","rel","src","alt","onError","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/components/LinkBlock.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LinkBlock.css';\r\nimport defaultIcon from '../assets/default-icon.png';\r\n\r\nfunction LinkBlock({ \r\n  title, \r\n  url, \r\n  customIcon = '', \r\n  isRemoveMode, \r\n  onRemove, \r\n  onEdit \r\n}) {\r\n  let domain = '';\r\n  try {\r\n    domain = new URL(url).hostname;\r\n  } catch (error) {}\r\n\r\n  const googleIconUrl = `https://www.google.com/s2/favicons?domain=${domain}&sz=128`;\r\n\r\n  // Выбираем, что показать как иконку: если customIcon непустой — берём его,\r\n  // иначе — Google Favicons\r\n  const [iconSrc, setIconSrc] = useState(customIcon || googleIconUrl);\r\n\r\n  // Если customIcon сменился (пользователь загрузил новую картинку),\r\n  // обновим локальное состояние, чтобы <img> сразу подхватил\r\n  useEffect(() => {\r\n    if (customIcon) {\r\n      setIconSrc(customIcon);\r\n    } else {\r\n      setIconSrc(googleIconUrl);\r\n    }\r\n  }, [customIcon, googleIconUrl]);\r\n\r\n  const handleImgError = () => {\r\n    setIconSrc(defaultIcon);\r\n  };\r\n\r\n  return (\r\n    <div className=\"link-block-wrapper\">\r\n      <a\r\n        href={url}\r\n        className=\"link-block\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <div className=\"icon-wrapper\">\r\n          <img\r\n            src={iconSrc}\r\n            alt=\"icon\"\r\n            className=\"favicon\"\r\n            onError={handleImgError}\r\n          />\r\n        </div>\r\n        <div className=\"tooltip\">{title}</div>\r\n      </a>\r\n\r\n      {isRemoveMode && (\r\n        <>\r\n          {/* Кнопка удаления (справа сверху) */}\r\n          <button className=\"remove-block-btn\" onClick={onRemove}>\r\n            -\r\n          </button>\r\n          {/* Кнопка редактирования (слева сверху) */}\r\n          <button className=\"edit-block-btn\" onClick={onEdit}>\r\n            ✎\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,SAASA,CAAC;EACjBC,KAAK;EACLC,GAAG;EACHC,UAAU,GAAG,EAAE;EACfC,YAAY;EACZC,QAAQ;EACRC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI;IACFA,MAAM,GAAG,IAAIC,GAAG,CAACP,GAAG,CAAC,CAACQ,QAAQ;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;EAEjB,MAAMC,aAAa,GAAG,6CAA6CJ,MAAM,SAAS;;EAElF;EACA;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAACU,UAAU,IAAIS,aAAa,CAAC;;EAEnE;EACA;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,EAAE;MACdW,UAAU,CAACX,UAAU,CAAC;IACxB,CAAC,MAAM;MACLW,UAAU,CAACF,aAAa,CAAC;IAC3B;EACF,CAAC,EAAE,CAACT,UAAU,EAAES,aAAa,CAAC,CAAC;EAE/B,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BD,UAAU,CAACnB,WAAW,CAAC;EACzB,CAAC;EAED,oBACEE,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpB,OAAA;MACEqB,IAAI,EAAEhB,GAAI;MACVc,SAAS,EAAC,YAAY;MACtBG,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,qBAAqB;MAAAH,QAAA,gBAEzBpB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BpB,OAAA;UACEwB,GAAG,EAAER,OAAQ;UACbS,GAAG,EAAC,MAAM;UACVN,SAAS,EAAC,SAAS;UACnBO,OAAO,EAAER;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA;QAAKmB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEhB;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAEHvB,YAAY,iBACXP,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBAEEpB,OAAA;QAAQmB,SAAS,EAAC,kBAAkB;QAACY,OAAO,EAAEvB,QAAS;QAAAY,QAAA,EAAC;MAExD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET9B,OAAA;QAAQmB,SAAS,EAAC,gBAAgB;QAACY,OAAO,EAAEtB,MAAO;QAAAW,QAAA,EAAC;MAEpD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAlEQP,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAoElB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}