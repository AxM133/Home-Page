{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axm\\\\Documents\\\\sites\\\\Pet-projects\\\\custom-newtab-extension\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport LinkForm from './components/LinkForm';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [links, setLinks] = useState([]);\n\n  // При первом рендере загружаем ссылки из localStorage\n  useEffect(() => {\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      // Если ничего нет, можем задать базовые ссылки\n      setLinks([{\n        title: 'Google',\n        url: 'https://www.google.com'\n      }, {\n        title: 'YouTube',\n        url: 'https://www.youtube.com'\n      }]);\n    }\n  }, []);\n\n  // Каждый раз, когда изменяется массив links, сохраняем его в localStorage\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Функция добавления новой ссылки в список\n  const handleAddLink = newLink => {\n    setLinks(prevLinks => [...prevLinks, newLink]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        className: \"theme-toggle\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"link-form-section\",\n        children: /*#__PURE__*/_jsxDEV(LinkForm, {\n          onAddLink: handleAddLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"links-section\",\n        children: links.map((link, index) => /*#__PURE__*/_jsxDEV(LinkBlock, {\n          title: link.title,\n          url: link.url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"widgets-section\",\n        children: [/*#__PURE__*/_jsxDEV(WeatherWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClockWidget, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IWahq7qgiLTHewJtMFIUn+w+RpQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LinkBlock","LinkForm","WeatherWidget","ClockWidget","jsxDEV","_jsxDEV","App","_s","links","setLinks","storedLinks","localStorage","getItem","JSON","parse","title","url","setItem","stringify","handleAddLink","newLink","prevLinks","className","theme","children","onClick","toggleTheme","fileName","_jsxFileName","lineNumber","columnNumber","onAddLink","map","link","index","_c","$RefreshReg$"],"sources":["C:/Users/axm/Documents/sites/Pet-projects/custom-newtab-extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LinkBlock from './components/LinkBlock';\nimport LinkForm from './components/LinkForm';\nimport WeatherWidget from './components/WeatherWidget';\nimport ClockWidget from './components/ClockWidget';\n\nfunction App() {\n  const [links, setLinks] = useState([]);\n\n  // При первом рендере загружаем ссылки из localStorage\n  useEffect(() => {\n    const storedLinks = localStorage.getItem('userLinks');\n    if (storedLinks) {\n      setLinks(JSON.parse(storedLinks));\n    } else {\n      // Если ничего нет, можем задать базовые ссылки\n      setLinks([\n        { title: 'Google', url: 'https://www.google.com' },\n        { title: 'YouTube', url: 'https://www.youtube.com' }\n      ]);\n    }\n  }, []);\n\n  // Каждый раз, когда изменяется массив links, сохраняем его в localStorage\n  useEffect(() => {\n    localStorage.setItem('userLinks', JSON.stringify(links));\n  }, [links]);\n\n  // Функция добавления новой ссылки в список\n  const handleAddLink = (newLink) => {\n    setLinks((prevLinks) => [...prevLinks, newLink]);\n  };\n\n\n  return (\n    <div className={`App ${theme}`}>\n      <header className=\"header\">\n        <button onClick={toggleTheme} className=\"theme-toggle\">\n          Переключить тему\n        </button>\n      </header>\n      <main>\n        {/* Форма для добавления ссылок */}\n        <section className=\"link-form-section\">\n          <LinkForm onAddLink={handleAddLink} />\n        </section>\n\n        {/* Секция с отображением ссылок */}\n        <section className=\"links-section\">\n          {links.map((link, index) => (\n            <LinkBlock key={index} title={link.title} url={link.url} />\n          ))}\n        </section>\n\n        {/* Виджеты */}\n        <section className=\"widgets-section\">\n          <WeatherWidget />\n          <ClockWidget />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}