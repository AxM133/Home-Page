{"ast":null,"code":"import React,{useState,useEffect}from'react';import LinkForm from'./LinkForm';import'./SidebarMenu.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SidebarMenu(_ref){let{isOpen,onClose,onAddLink,toggleTheme,toggleRemoveMode}=_ref;const[showForm,setShowForm]=useState(false);const[isDarkChecked,setIsDarkChecked]=useState(false);useEffect(()=>{// Считываем сохранённое состояние \"isDark\" из localStorage\nconst storedIsDark=localStorage.getItem('isDark');if(storedIsDark==='true'){setIsDarkChecked(true);}else{setIsDarkChecked(false);}},[]);// При изменении переключателя\nconst handleThemeSwitch=e=>{const checked=e.target.checked;setIsDarkChecked(checked);localStorage.setItem('isDark',checked?'true':'false');toggleTheme();};const handleAddBlockClick=()=>{setShowForm(prev=>!prev);};return/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-menu \".concat(isOpen?'open':''),children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041C\\u0435\\u043D\\u044E\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddBlockClick,children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0431\\u043B\\u043E\\u043A\"}),showForm&&/*#__PURE__*/_jsx(\"div\",{className:\"add-form-wrapper\",children:/*#__PURE__*/_jsx(LinkForm,{onAddLink:onAddLink})}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleRemoveMode,children:\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0431\\u043B\\u043E\\u043A\\u0430\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"switch theme-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isDarkChecked,onChange:handleThemeSwitch}),/*#__PURE__*/_jsx(\"span\",{className:\"slider\"})]})]});}export default SidebarMenu;","map":{"version":3,"names":["React","useState","useEffect","LinkForm","jsx","_jsx","jsxs","_jsxs","SidebarMenu","_ref","isOpen","onClose","onAddLink","toggleTheme","toggleRemoveMode","showForm","setShowForm","isDarkChecked","setIsDarkChecked","storedIsDark","localStorage","getItem","handleThemeSwitch","e","checked","target","setItem","handleAddBlockClick","prev","className","concat","children","onClick","type","onChange"],"sources":["C:/Users/axm/Documents/GitHub/Home-Page/src/components/SidebarMenu.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LinkForm from './LinkForm';\r\nimport './SidebarMenu.css';\r\n\r\nfunction SidebarMenu({\r\n  isOpen,\r\n  onClose,\r\n  onAddLink,\r\n  toggleTheme,\r\n  toggleRemoveMode\r\n}) {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [isDarkChecked, setIsDarkChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Считываем сохранённое состояние \"isDark\" из localStorage\r\n    const storedIsDark = localStorage.getItem('isDark');\r\n    if (storedIsDark === 'true') {\r\n      setIsDarkChecked(true);\r\n    } else {\r\n      setIsDarkChecked(false);\r\n    }\r\n  }, []);\r\n\r\n  // При изменении переключателя\r\n  const handleThemeSwitch = (e) => {\r\n    const checked = e.target.checked;\r\n    setIsDarkChecked(checked);\r\n    localStorage.setItem('isDark', checked ? 'true' : 'false');\r\n    toggleTheme(); \r\n  };\r\n\r\n  const handleAddBlockClick = () => {\r\n    setShowForm((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar-menu ${isOpen ? 'open' : ''}`}>\r\n      <h2>Меню</h2>\r\n\r\n      <button onClick={handleAddBlockClick}>Добавить блок</button>\r\n      {showForm && (\r\n        <div className=\"add-form-wrapper\">\r\n          <LinkForm onAddLink={onAddLink} />\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={toggleRemoveMode}>Изменение блока</button>\r\n\r\n      {/* Переключатель темы (switch) внизу */}\r\n      <label className=\"switch theme-switch\">\r\n        <input \r\n          type=\"checkbox\"\r\n          checked={isDarkChecked}\r\n          onChange={handleThemeSwitch}\r\n        />\r\n        <span className=\"slider\" />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarMenu;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAMjB,IANkB,CACnBC,MAAM,CACNC,OAAO,CACPC,SAAS,CACTC,WAAW,CACXC,gBACF,CAAC,CAAAL,IAAA,CACC,KAAM,CAACM,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACgB,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAEzDC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAiB,YAAY,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CACnD,GAAIF,YAAY,GAAK,MAAM,CAAE,CAC3BD,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,IAAM,CACLA,gBAAgB,CAAC,KAAK,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAI,iBAAiB,CAAIC,CAAC,EAAK,CAC/B,KAAM,CAAAC,OAAO,CAAGD,CAAC,CAACE,MAAM,CAACD,OAAO,CAChCN,gBAAgB,CAACM,OAAO,CAAC,CACzBJ,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAEF,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CAC1DX,WAAW,CAAC,CAAC,CACf,CAAC,CAED,KAAM,CAAAc,mBAAmB,CAAGA,CAAA,GAAM,CAChCX,WAAW,CAAEY,IAAI,EAAK,CAACA,IAAI,CAAC,CAC9B,CAAC,CAED,mBACErB,KAAA,QAAKsB,SAAS,iBAAAC,MAAA,CAAkBpB,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAqB,QAAA,eACrD1B,IAAA,OAAA0B,QAAA,CAAI,0BAAI,CAAI,CAAC,cAEb1B,IAAA,WAAQ2B,OAAO,CAAEL,mBAAoB,CAAAI,QAAA,CAAC,2EAAa,CAAQ,CAAC,CAC3DhB,QAAQ,eACPV,IAAA,QAAKwB,SAAS,CAAC,kBAAkB,CAAAE,QAAA,cAC/B1B,IAAA,CAACF,QAAQ,EAACS,SAAS,CAAEA,SAAU,CAAE,CAAC,CAC/B,CACN,cAEDP,IAAA,WAAQ2B,OAAO,CAAElB,gBAAiB,CAAAiB,QAAA,CAAC,uFAAe,CAAQ,CAAC,cAG3DxB,KAAA,UAAOsB,SAAS,CAAC,qBAAqB,CAAAE,QAAA,eACpC1B,IAAA,UACE4B,IAAI,CAAC,UAAU,CACfT,OAAO,CAAEP,aAAc,CACvBiB,QAAQ,CAAEZ,iBAAkB,CAC7B,CAAC,cACFjB,IAAA,SAAMwB,SAAS,CAAC,QAAQ,CAAE,CAAC,EACtB,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAArB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}